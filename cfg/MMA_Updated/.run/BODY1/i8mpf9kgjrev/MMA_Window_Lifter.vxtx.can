/* !Encoding: 65001  */
includes
{
  #include "__DiagLibrary.cin"
  #include "__cDiagService.cin"
  #include "__VariablesLib.cin"
  #include "__CaplGeneratorLib.cin"
  #include "__CANoeReportFuntionsLib.cin"
}

variables
{
  // Global variables defined within this CAPL file
}

void Ttcc5jmo2_RC_10_Ignition_Status(int64 Specify_Ign_State)
{
  TestCommandBegin(__eSet, __cSet, "Function for Ignition State Change", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`ModelGlobal::`ISw_Stat = Specify_Ign_State;
      snprintf(__cArray, 8192, "%s", "ISw_Stat");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "Specify_Ign_State");
      
      __ReportTableRow(0, __cArray2, __cAOp, Specify_Ign_State, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_RC_11_Vehicle_state(int64 Specify_Vehicle_Living_State)
{
  TestCommandBegin(__eSet, __cSet, "Specify parameter based on the signal Inputs", "7");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_VehSL_Master_Stat1_ST3::`VehSL_LivingStat_ST3.phys = Specify_Vehicle_Living_State;
      snprintf(__cArray, 8192, "%s", "VehSL_LivingStat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "Specify_Vehicle_Living_State");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_VehSL_Master_Stat1_ST3::`VehSL_LivingStat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, Specify_Vehicle_Living_State, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_RC_12_Key_State(int64 Specify_Key_State)
{
  TestCommandBegin(__eSet, __cSet, "Specify Key State based on above defined Parameters", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_KG_Stat_ST3::`KG_Key_Rs_ST3.phys = Specify_Key_State;
      snprintf(__cArray, 8192, "%s", "KG_Key_Rs_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "Specify_Key_State");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_KG_Stat_ST3::`KG_Key_Rs_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, Specify_Key_State, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_RC_4_6_Key_Less_Go()
{
  TestCommandBegin(__eSet, __cSet, "Select Key Less Go", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_KG_Stat_ST3::`KG_Key_Rs_ST3.phys = 3;
      snprintf(__cArray, 8192, "%s", "KG_Key_Rs_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_CKG_KEY_RS_SNA");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_KG_Stat_ST3::`KG_Key_Rs_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 3, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Select Powertrain NOT READY", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_PT4_PTCoor4_ST3::`PT4_PTCoor_PT_Rdy_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "PT4_PTCoor_PT_Rdy_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_PT_RDY_V2_PT_NOT_RDY");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_PT4_PTCoor4_ST3::`PT4_PTCoor_PT_Rdy_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_RC_1_0_Power_Windows_Close()
{
int64 __ifExec0;
int64 __ifExec1;
int64 __ifExec2;
int64 __ifExec3;

  
  TestControlStructBegin(__cIf, "Check if Windows are not already Closed", "1");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec0 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FL_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec0 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Auto Close button ", "2");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 6;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOCLS");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 6, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "3");
      {
        __Wait("1", (4 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Close Button", "4");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "5");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eCheck, __cCheck, "Check for Window Closed", "6");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Check if the Window Position is 0 mm", "7");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 2, "<=") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FL_Posn_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "");
          __ReportTableRow(0, __cArray2, "<=", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "8");
  {
    if (__DoElse(__ifExec0))
    {
      TestCommandBegin(__eReport, __cReport, __cEmpty, "9");
      {
        testStep(2, __cEmpty, "FL Window is already Closed");
      
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  
  TestControlStructBegin(__cIf, "Check if Windows are not already Closed", "11");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec1 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FR_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec1 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Auto Close button ", "12");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 6;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOCLS");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 6, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "13");
      {
        __Wait("1", (4 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Close Button", "14");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "15");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eCheck, __cCheck, "Check for Window Closed", "16");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Check if the window Position is 0 mm", "17");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 2, "<=") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FR_Posn_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "");
          __ReportTableRow(0, __cArray2, "<=", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "18");
  {
    if (__DoElse(__ifExec1))
    {
      TestCommandBegin(__eReport, __cReport, __cEmpty, "19");
      {
        testStep(2, __cEmpty, "FR Window is already Closed");
      
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  
  TestControlStructBegin(__cIf, "Check if Windows are not already Closed", "22");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec2 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RL_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec2 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Auto Close button ", "23");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 6;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOCLS");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 6, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "24");
      {
        __Wait("1", (4 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Close Button", "25");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "26");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eCheck, __cCheck, "Check for Window Closed", "27");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Check if the Window Position is 0 mm", "28");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 2, "<=") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RL_Posn_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "");
          __ReportTableRow(0, __cArray2, "<=", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "29");
  {
    if (__DoElse(__ifExec2))
    {
      TestCommandBegin(__eReport, __cReport, __cEmpty, "30");
      {
        testStep(2, __cEmpty, "RL Window is already Closed");
      
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  
  TestControlStructBegin(__cIf, "Check if Windows are not already Closed", "34");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec3 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RR_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec3 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Auto Close button ", "35");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 6;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOCLS");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 6, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "36");
      {
        __Wait("1", (4 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Close Button", "37");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "38");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eCheck, __cCheck, "Check for Window Closed", "39");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Check if the Window Position is 0 mm", "40");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 2, "<=") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RR_Posn_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "");
          __ReportTableRow(0, __cArray2, "<=", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "41");
  {
    if (__DoElse(__ifExec3))
    {
      TestCommandBegin(__eReport, __cReport, __cEmpty, "42");
      {
        testStep(2, __cEmpty, "RR Window is already Closed");
      
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


}

void Ttcc5jmo2_RC_1_1_Power_Windows_Open()
{
int64 __ifExec4;
int64 __ifExec5;
int64 __ifExec6;
int64 __ifExec7;

  
  TestControlStructBegin(__cIf, "Check if Windows are not already Opened", "1");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec4 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FL_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
        __ReportTableRow(0, __cArray2, "!=", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec4 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Auto Open button ", "2");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 5;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "3");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Open  Button", "4");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "5");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eCheck, __cCheck, "Check for Window Opened", "6");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
          __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "7");
  {
    if (__DoElse(__ifExec4))
    {
      TestCommandBegin(__eReport, __cReport, __cEmpty, "8");
      {
        testStep(2, __cEmpty, "FL Window is already Opened");
      
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  
  TestControlStructBegin(__cIf, "Check if Windows are not already Opened", "10");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec5 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FR_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
        __ReportTableRow(0, __cArray2, "!=", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec5 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Auto Open button ", "11");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 5;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "12");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Open Button", "13");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "14");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eCheck, __cCheck, "Check for Window Opened", "15");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
          __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "16");
  {
    if (__DoElse(__ifExec5))
    {
      TestCommandBegin(__eReport, __cReport, __cEmpty, "17");
      {
        testStep(2, __cEmpty, "FR Window is already Opened");
      
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  
  TestControlStructBegin(__cIf, "Check if Windows are not already Opened", "20");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec6 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RL_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
        __ReportTableRow(0, __cArray2, "!=", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec6 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Auto Open button ", "21");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 5;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "22");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Open Button", "23");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "24");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eCheck, __cCheck, "Check for Window opened", "25");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
          __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "26");
  {
    if (__DoElse(__ifExec6))
    {
      TestCommandBegin(__eReport, __cReport, __cEmpty, "27");
      {
        testStep(2, __cEmpty, "RL Window is already Opened");
      
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  
  TestControlStructBegin(__cIf, "Check if Windows are not already Opened", "31");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec7 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RR_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
        __ReportTableRow(0, __cArray2, "!=", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec7 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Auto Open button ", "32");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 5;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "33");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Open  Button", "34");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "", "35");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eCheck, __cCheck, "Check for Window Opened", "36");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
          __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "37");
  {
    if (__DoElse(__ifExec7))
    {
      TestCommandBegin(__eReport, __cReport, __cEmpty, "38");
      {
        testStep(2, __cEmpty, "RR Window is alreadyOpened");
      
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


}

void Ttcc5jmo2_RC_1_2_Short_Stroke_High()
{
}

void Ttcc5jmo2_RC_1_3_Short_Stroke_Low()
{
}

void Ttcc5jmo2_RC_4_3_FL_Thermal_Protection()
{
  {
      snprintf(__cConditionArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_FL_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);

    snprintf(__cConditionArray, 8192, "%s%s", "Check Whether Thermal Protection is Inactive for FL (", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
    TestControlStructBegin(__cWhile, __cConditionArray, "0");
    while(1)
    {
      int64 __expr0;
      int64 __condition;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_ThermProt_FL_Actv_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
          snprintf(__cConditionArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_FL_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);
  
      snprintf(__cConditionArray, 8192, "%s%s", "Check Whether Thermal Protection is Inactive for FL (", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
      if(__condition == 1)
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : true");
      }
      else
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : false");
      }
      TestControlStructBegin(__cWhileIteration, __cArray2, "0");
      {
      __ReportTableHead5Columns("Condition", __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_ThermProt_FL_Actv_ST3, 2, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_FL_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_ThermProt_FL_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cWhileCondition, 1);
  
      if(__LoopIsBlocking())
      {
        TestControlStructEnd(__eErrorInTestSystem);
        break;
      }
  
      if (0 == __condition)
      {
        TestControlStructEnd(__eUndefined);
        break;
      }
    }

      TestCommandBegin(__eSet, __cSet, "Press Auto Open Button for FL (LIN)", "1");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 5;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "2");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Open Button for FL (LIN)", "3");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 5 s", "4");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Press Auto Close Button for FL (LIN)", "5");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 6;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOCLS");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 6, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "6");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Close Button for FL (LIN)", "7");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 5 s", "8");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestControlStructEnd(__eUndefined);
    }
    TestControlStructEnd(__eUndefined);
  }
  

  TestCommandBegin(__eCheck, __cCheck, "Check that Thermal Protection Active for FL", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_ThermProt_FL_Actv_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_FL_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_ThermProt_FL_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_RC_4_3_FR_Thermal_Protection()
{
  {
      snprintf(__cConditionArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_FR_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);

    snprintf(__cConditionArray, 8192, "%s%s", "Check Whether Thermal Protection is Inactive for FR (", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
    TestControlStructBegin(__cWhile, __cConditionArray, "0");
    while(1)
    {
      int64 __expr0;
      int64 __condition;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_ThermProt_FR_Actv_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
          snprintf(__cConditionArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_FR_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);
  
      snprintf(__cConditionArray, 8192, "%s%s", "Check Whether Thermal Protection is Inactive for FR (", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
      if(__condition == 1)
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : true");
      }
      else
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : false");
      }
      TestControlStructBegin(__cWhileIteration, __cArray2, "0");
      {
      __ReportTableHead5Columns("Condition", __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_ThermProt_FR_Actv_ST3, 2, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_FR_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_ThermProt_FR_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cWhileCondition, 1);
  
      if(__LoopIsBlocking())
      {
        TestControlStructEnd(__eErrorInTestSystem);
        break;
      }
  
      if (0 == __condition)
      {
        TestControlStructEnd(__eUndefined);
        break;
      }
    }

      TestCommandBegin(__eSet, __cSet, "Press Auto Open Button for FR (LIN)", "1");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 5;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "2");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Open Button for FR (LIN)", "3");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 5 s", "4");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Press Auto Close Button for FR (LIN)", "5");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 6;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOCLS");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 6, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "6");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Close Button for FR (LIN)", "7");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 5 s", "8");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestControlStructEnd(__eUndefined);
    }
    TestControlStructEnd(__eUndefined);
  }
  

  TestCommandBegin(__eCheck, __cCheck, "Check that Thermal Protection Active for FR", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_ThermProt_FR_Actv_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_FR_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_ThermProt_FR_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_RC_4_3_RL_Thermal_Protection()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  {
      snprintf(__cConditionArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_RL_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);

    snprintf(__cConditionArray, 8192, "%s%s", "Check Whether Thermal Protection is Inactive for RL (", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
    TestControlStructBegin(__cWhile, __cConditionArray, "0");
    while(1)
    {
      int64 __expr0;
      int64 __condition;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_ThermProt_RL_Actv_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
          snprintf(__cConditionArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_RL_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);
  
      snprintf(__cConditionArray, 8192, "%s%s", "Check Whether Thermal Protection is Inactive for RL (", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
      if(__condition == 1)
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : true");
      }
      else
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : false");
      }
      TestControlStructBegin(__cWhileIteration, __cArray2, "1");
      {
      __ReportTableHead5Columns("Condition", __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_ThermProt_RL_Actv_ST3, 2, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_RL_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_ThermProt_RL_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cWhileCondition, 1);
  
      if(__LoopIsBlocking())
      {
        TestControlStructEnd(__eErrorInTestSystem);
        break;
      }
  
      if (0 == __condition)
      {
        TestControlStructEnd(__eUndefined);
        break;
      }
    }

      TestCommandBegin(__eSet, __cSet, "Press Auto Open Button for RL (LIN)", "2");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 5;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "3");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Open Button for RL (LIN)", "4");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 5 s", "5");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Press Auto Close Button for RL (LIN)", "6");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 6;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOCLS");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 6, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "7");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Close Button for RL (LIN)", "8");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 5 s", "9");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestControlStructEnd(__eUndefined);
    }
    TestControlStructEnd(__eUndefined);
  }
  

  TestCommandBegin(__eCheck, __cCheck, "Check that Thermal Protection Active for RL", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_ThermProt_RL_Actv_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_RL_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_ThermProt_RL_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


}

void Ttcc5jmo2_RC_4_3_RR_Thermal_Protection()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  {
      snprintf(__cConditionArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_RR_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);

    snprintf(__cConditionArray, 8192, "%s%s", "Check Whether Thermal Protection is Inactive for RR (", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
    TestControlStructBegin(__cWhile, __cConditionArray, "0");
    while(1)
    {
      int64 __expr0;
      int64 __condition;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_ThermProt_RR_Actv_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
          snprintf(__cConditionArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_RR_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);
  
      snprintf(__cConditionArray, 8192, "%s%s", "Check Whether Thermal Protection is Inactive for RR (", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
      if(__condition == 1)
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : true");
      }
      else
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : false");
      }
      TestControlStructBegin(__cWhileIteration, __cArray2, "1");
      {
      __ReportTableHead5Columns("Condition", __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_ThermProt_RR_Actv_ST3, 2, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_RR_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_ThermProt_RR_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cWhileCondition, 1);
  
      if(__LoopIsBlocking())
      {
        TestControlStructEnd(__eErrorInTestSystem);
        break;
      }
  
      if (0 == __condition)
      {
        TestControlStructEnd(__eUndefined);
        break;
      }
    }

      TestCommandBegin(__eSet, __cSet, "Press Auto Open Button for RR (LIN)", "2");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 5;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "3");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Open Button for RR (LIN)", "4");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 5 s", "5");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Press Auto Close Button for RR (LIN)", "6");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 6;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "AUTOCLS");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 6, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "7");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Release Auto Close Button for RR (LIN)", "8");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 5 s", "9");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestControlStructEnd(__eUndefined);
    }
    TestControlStructEnd(__eUndefined);
  }
  

  TestCommandBegin(__eCheck, __cCheck, "Check that Thermal Protection Active for RR", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_ThermProt_RR_Actv_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_RR_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_ThermProt_RR_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


}

void Ttcc5jmo2_RC_4_7_UI_Handler_Key_Inside()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable UI Handler Request through Variant Coding", "2");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable UI Handler Request through Variant Coding", "6");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable UI Handler Request through Variant Coding", "10");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable UI Handler Request through Variant Coding", "14");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  TestCommandBegin(__eSet, __cSet, "Power window UI property request - TRUE", "17");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_FL_Rq_ST3::`PW_UI_FL_Prop_Rq_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_UI_FL_Prop_Rq_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_FL_Rq_ST3::`PW_UI_FL_Prop_Rq_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_FR_Rq_ST3::`PW_UI_FR_Prop_Rq_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_UI_FR_Prop_Rq_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_FR_Rq_ST3::`PW_UI_FR_Prop_Rq_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_RL_Rq_ST3::`PW_UI_RL_Prop_Rq_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_UI_RL_Prop_Rq_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_RL_Rq_ST3::`PW_UI_RL_Prop_Rq_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_RR_Rq_ST3::`PW_UI_RR_Prop_Rq_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_UI_RR_Prop_Rq_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_RR_Rq_ST3::`PW_UI_RR_Prop_Rq_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_RC_4_8_UI_Handler_No_Key()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable UI Handler Request through Variant Coding", "3");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable UI Handler Request through Variant Coding", "7");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable UI Handler Request through Variant Coding", "11");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable UI Handler Request through Variant Coding", "15");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_Enable_UI_Fensterheber_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  TestCommandBegin(__eSet, __cSet, "Power window UI property request - FALSE", "18");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_FL_Rq_ST3::`PW_UI_FL_Prop_Rq_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_UI_FL_Prop_Rq_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_FL_Rq_ST3::`PW_UI_FL_Prop_Rq_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_FR_Rq_ST3::`PW_UI_FR_Prop_Rq_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_UI_FR_Prop_Rq_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_FR_Rq_ST3::`PW_UI_FR_Prop_Rq_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_RL_Rq_ST3::`PW_UI_RL_Prop_Rq_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_UI_RL_Prop_Rq_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_RL_Rq_ST3::`PW_UI_RL_Prop_Rq_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_RR_Rq_ST3::`PW_UI_RR_Prop_Rq_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_UI_RR_Prop_Rq_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_PW_UI_RR_Rq_ST3::`PW_UI_RR_Prop_Rq_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_RC_13_1_Child_Security_Lock_Active()
{
int64 __ifExec8;

  
  TestControlStructBegin(__cIf, "Check Whether CSL is False or Inactive", "0");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec8 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, 1, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "CSL_LHD_Inact_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, 1, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "CSL_LHD_Inact_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "!=", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec8 = 1;

      TestCommandBegin(__eSet, __cSet, "Press CSL", "1");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`CEIC_M_BODY1_Container_ST3_PW_Settings_ST35::`CSL_Inact_ST35.phys = 1;
          snprintf(__cArray, 8192, "%s", "CSL_Inact_ST35");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_FLS_TRU_FALSE");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`CEIC_M_BODY1_Container_ST3_PW_Settings_ST35::`CSL_Inact_ST35, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 2 s", "2");
      {
        __Wait("1", (2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eCheck, __cCheck, "Check for CSL LED ON", "3");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`LIN::dbNode::`DM::`Door_Stat_LIN_ST3_DOOR::`CSL_SwLED_Rq_ST3_DOOR, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "CSL_SwLED_Rq_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "TRUE");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`LIN::dbNode::`DM::`Door_Stat_LIN_ST3_DOOR::`CSL_SwLED_Rq_ST3_DOOR, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Check for CSL Active", "4");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, 1, "==") == 1;
          snprintf(__cArray, 8192, "%s", "CSL_LHD_Inact_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
          __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "5");
  {
    if (__DoElse(__ifExec8))
    {
    }
  }
  TestControlStructEnd(__eUndefined);

}

void Ttcc5jmo2_RC_13_0_Child_Security_Lock_Deactive()
{
int64 __ifExec9;

  
  TestControlStructBegin(__cIf, "Check Whether CSL is True or Active", "0");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec9 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "CSL_LHD_Inact_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, 2, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "CSL_LHD_Inact_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
        __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec9 = 1;

      TestCommandBegin(__eSet, __cSet, "Press CSL", "1");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`CEIC_M_BODY1_Container_ST3_PW_Settings_ST35::`CSL_Inact_ST35.phys = 2;
          snprintf(__cArray, 8192, "%s", "CSL_Inact_ST35");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_FLS_TRU_TRUE");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`CEIC_M_BODY1_Container_ST3_PW_Settings_ST35::`CSL_Inact_ST35, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 2 s", "2");
      {
        __Wait("1", (2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eCheck, __cCheck, "Check for CSL LED OFF", "3");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`LIN::dbNode::`DM::`Door_Stat_LIN_ST3_DOOR::`CSL_SwLED_Rq_ST3_DOOR, 1, "==") == 1;
          snprintf(__cArray, 8192, "%s", "CSL_SwLED_Rq_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "FALSE");
          __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
          __ReportLValueOrSignalNotOnline(`LIN::dbNode::`DM::`Door_Stat_LIN_ST3_DOOR::`CSL_SwLED_Rq_ST3_DOOR, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Check for CSL Inactive", "4");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`CEIC_M::`CEIC_M_BODY1_Container_ST3_PW_Settings_ST35::`CSL_Inact_ST35, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "CSL_Inact_ST35");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_FLS_TRU_TRUE");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`CEIC_M_BODY1_Container_ST3_PW_Settings_ST35::`CSL_Inact_ST35, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "5");
  {
    if (__DoElse(__ifExec9))
    {
    }
  }
  TestControlStructEnd(__eUndefined);

}

void Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code the Parameters", "2");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code the Parameters", "6");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code the Parameters", "10");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code the Parameters", "14");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Parameters", "17");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Parameters", "18");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Parameters", "19");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Parameters", "20");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


}

void Ttcc5jmo2_RC_4_0_Code_Manual_Recirculation()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code the Parameters", "2");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code the Parameters", "6");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code the Parameters", "10");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code the Parameters", "14");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Parameters", "17");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Parameters", "18");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Parameters", "19");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Parameters", "20");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftAutSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManOeffnen_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableUmluftManSchliessn_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_1_SecOC_With_Role(int64 Role)
{
  TestCommandBegin(__eSet, __cSet, "", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`SeckTickSynchronization::`ExecuteAuthentication = 1;
      snprintf(__cArray, 8192, "%s", "ExecuteAuthentication");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 1, __cArray3);
      
  
    }
    {
      @sysvarInt::`SeckTickSynchronization::`CheckBox_DeactivateTesterPresent = 0;
      snprintf(__cArray, 8192, "%s", "CheckBox_DeactivateTesterPresent");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 0, __cArray3);
      
  
    }
    {
      @sysvarInt::`DAG_Diagnostics::`DiagnosticsRole = Role;
      snprintf(__cArray, 8192, "%s", "DiagnosticsRole");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "Role");
      
      __ReportTableRow(0, __cArray2, __cAOp, Role, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`LocalAuthentication::`TargetMode = 0;
      snprintf(__cArray, 8192, "%s", "TargetMode");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "AuthForAllTargets");
      
      __ReportTableRow(0, __cArray2, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Press Authenticate Button", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`LocalAuthentication::`Button_Authenticate = 1;
      snprintf(__cArray, 8192, "%s", "Button_Authenticate");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "4");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Release Authenticate Button", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`LocalAuthentication::`Button_Authenticate = 0;
      snprintf(__cArray, 8192, "%s", "Button_Authenticate");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "6");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Result is True", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(sysvarInt::`LocalAuthentication::`AuthResult, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "AuthResult");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportCell(@sysvarInt::`LocalAuthentication::`AuthResult);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`SeckTickSynchronization::`Button_SecTickCountSync = 1;
      snprintf(__cArray, 8192, "%s", "Button_SecTickCountSync");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "9");
  {
    __Wait("1", (500 * 1000000LL), 1000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`SeckTickSynchronization::`Button_SecTickCountSync = 0;
      snprintf(__cArray, 8192, "%s", "Button_SecTickCountSync");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "", "11");
  {
  
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 15 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
                        snprintf(__cArray, elCount(__cArray), "System variable '%s'", "LED_Sync_Result");
      __setFailed |= testJoinSignal(sysvarInt::`SeckTickSynchronization::`LED_Sync_Result, __cArray,
                        delegate dword(sysvar * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 1, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        __bVerdict = testWaitForAllJoinedEventsNS(__time) > 0;
        __ReportTableHead5Columns("Waited for occurrence of 1 value condition.", __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
                        __csr = CheckSignalMatch(sysvarInt::`SeckTickSynchronization::`LED_Sync_Result, 1, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "LED_Sync_Result");
                        snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
                        snprintf(__cArray3, 8192, "%s", "");
                        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
                        __ReportCell(@sysvarInt::`SeckTickSynchronization::`LED_Sync_Result);
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

  TestCommandBegin(__eWait, __cWait, "", "12");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

}

void Ttcc5jmo2_BS_2_Start_Values()
{
  TestCommandBegin(__eSet, __cSet, "Selecting \"FC\" Body Style", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List01_BodyStyle_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "EVC_List01_BodyStyle_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List01_BodyStyle_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Selecting \"BR174\" Carline", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List02_VehLine_ST3.phys = 24;
      snprintf(__cArray, 8192, "%s", "EVC_List02_VehLine_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List02_VehLine_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 24, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Selecting \"DEU\" Country Code", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List06_Country_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "EVC_List06_Country_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List06_Country_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Selecting \"LHD\" as Steering Variant", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List03_StStyle_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_List03_StStyle_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List03_StStyle_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set EVC Values", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_CfgList_01_08_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_CfgList_01_08_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_EVC_STAT_PROG");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_CfgList_01_08_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List08_HL_Style_ST3.phys = 15;
      snprintf(__cArray, 8192, "%s", "EVC_List08_HL_Style_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_EVC_HL_STYLE_ST3_OTHER");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List08_HL_Style_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 15, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List07_TxStyle_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "EVC_List07_TxStyle_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_EVC_TXSTYLE_ST3_AUTOM_7");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List07_TxStyle_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_PN14_Master_Stat1_ST3::`PN14_DDP_Sw_Stat_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "PN14_DDP_Sw_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_PN14_TDP_SW_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_PN14_Master_Stat1_ST3::`PN14_DDP_Sw_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Select KEY = INSIDE", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_KG_Stat_ST3::`KG_Key_Rs_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "KG_Key_Rs_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_CKG_KEY_RS_INSIDE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_KG_Stat_ST3::`KG_Key_Rs_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Ignition ON", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_Ign_Stat_ST3::`ISw_Stat_ST3.phys = 4;
      snprintf(__cArray, 8192, "%s", "ISw_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_ISW_STAT_IGN_ON");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_Ign_Stat_ST3::`ISw_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 4, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set EVC Values", "7");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_01_26_Pr5_ST3::`EVC_CfgBit_01_26_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_CfgBit_01_26_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_EVC_STAT_PROG");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_01_26_Pr5_ST3::`EVC_CfgBit_01_26_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_27_4C_Pr5_ST3::`EVC_CfgBit_27_4C_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_CfgBit_27_4C_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_EVC_STAT_PROG");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_27_4C_Pr5_ST3::`EVC_CfgBit_27_4C_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_4D_72_Pr5_ST3::`EVC_CfgBit_4D_72_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_CfgBit_4D_72_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_EVC_STAT_PROG");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_4D_72_Pr5_ST3::`EVC_CfgBit_4D_72_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_73_98_Pr5_ST3::`EVC_CfgBit_73_98_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_CfgBit_73_98_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_EVC_STAT_PROG");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_73_98_Pr5_ST3::`EVC_CfgBit_73_98_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_99_BE_Pr5_ST3::`EVC_CfgBit_99_BE_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_CfgBit_99_BE_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_EVC_STAT_PROG");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_99_BE_Pr5_ST3::`EVC_CfgBit_99_BE_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_BF_E4_Pr5_ST3::`EVC_CfgBit_BF_E4_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_CfgBit_BF_E4_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_EVC_STAT_PROG");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_BF_E4_Pr5_ST3::`EVC_CfgBit_BF_E4_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Mirror Heating = OFF", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_ExtMirr_UI_Rq_ST3::`MirrHeat_UI_Rq_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "MirrHeat_UI_Rq_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_IDLE_ON_OFF_SNA_3H_OFF");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_ExtMirr_UI_Rq_ST3::`MirrHeat_UI_Rq_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Remote Start = FALSE", "9");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_RemStart_Stat_ST3::`RemStart_IgnCtrl_Actv_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "RemStart_IgnCtrl_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_RemStart_Stat_ST3::`RemStart_IgnCtrl_Actv_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_PN14_LHC_Request_ST3::`PN14_LHC_MirrHt_Rq_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "PN14_LHC_MirrHt_Rq_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_PN14_LHC_Request_ST3::`PN14_LHC_MirrHt_Rq_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Mirror Dimming = 0", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`OHCM::`OHCM_BODY1_Container_ST3_EC_Stat_LIN_ST3::`Mirr_Adzzl_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "Mirr_Adzzl_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`OHCM::`OHCM_BODY1_Container_ST3_EC_Stat_LIN_ST3::`Mirr_Adzzl_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "", "12");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_THC_HVAC_Stat1_ST3::`DewTemp_ST3.phys = 20;
      snprintf(__cArray, 8192, "%s", "DewTemp_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_THC_HVAC_Stat1_ST3::`DewTemp_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 20, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "", "13");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_DI_Temperature_ST3::`AirTemp_Outsd_Disp_ST3.phys = 25;
      snprintf(__cArray, 8192, "%s", "AirTemp_Outsd_Disp_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_DI_Temperature_ST3::`AirTemp_Outsd_Disp_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 25, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Supply Voltage is 12.5v", "14");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_PN14_Master_Stat1_ST3::`PN14_SupBat_Volt_ST3.phys = 12.5;
      snprintf(__cArray, 8192, "%s", "PN14_SupBat_Volt_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_PN14_Master_Stat1_ST3::`PN14_SupBat_Volt_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 12.5, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set EVC Values", "15");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_27_4C_Pr5_ST3::`EVC_42_883_Avl_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "EVC_42_883_Avl_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_27_4C_Pr5_ST3::`EVC_42_883_Avl_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_27_4C_Pr5_ST3::`EVC_4A_500_Avl_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_4A_500_Avl_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_27_4C_Pr5_ST3::`EVC_4A_500_Avl_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_4D_72_Pr5_ST3::`EVC_54_275_Avl_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_54_275_Avl_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_4D_72_Pr5_ST3::`EVC_54_275_Avl_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_73_98_Pr5_ST3::`EVC_8A_234_Avl_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_8A_234_Avl_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_73_98_Pr5_ST3::`EVC_8A_234_Avl_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_73_98_Pr5_ST3::`EVC_89_233_Avl_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "EVC_89_233_Avl_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgBit_73_98_Pr5_ST3::`EVC_89_233_Avl_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set Door Latch as Closed", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FR_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "DrRLtch_RL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "DrRLtch_RR_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_3_1_Enable_VSL_Living()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Activate FuVo Living for DMFL", "2");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Activate FuVo Living for DMFR", "6");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Activate FuVo Living for DMRL", "10");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Activate FuVo Living for DMRR", "14");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Values", "17");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Values", "18");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Values", "19");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Values", "20");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("TRUE", 8192);
        snprintf(__cArray2, 8192, "%s", "TRUE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_3_2_Disable_VSL_Living()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Activate FuVo Living for DMFL", "2");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Activate FuVo Living for DMFR", "6");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Activate FuVo Living for DMRL", "10");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Activate FuVo Living for DMRR", "14");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", "FALSE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Values", "17");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Values", "18");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Values", "19");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Values", "20");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "WL_Function_VariantCoding/PPWC_enableFuVoLiving_b", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("FALSE", 8192);
        snprintf(__cArray2, 8192, "%s", "FALSE");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'WL_Function_VariantCoding/PPWC_enableFuVoLiving_b\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_4_1_Denormalization_Of_Windows()
{
    
  TestCommandBegin(__eDiagService, __cDiagService, "enter Extended Session", "0");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.Extended_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "STDS_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'STDS_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'STDS_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Denormalization through Routine for Window FL", "1");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.PWC_WindowLift_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WinLift_Rq", "DENORM");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WinLift_Rq'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_STR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_STR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_STR_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "2");
  {
    __Wait("1", (5 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "", "3");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_FL_Norm_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 1, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAllJoinedEventsNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 1, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_FL_Norm_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
                        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

    
  TestCommandBegin(__eDiagService, __cDiagService, "enter Extended Session", "4");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.Extended_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "STDS_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'STDS_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'STDS_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Denormalization through Routine for Window FR", "5");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.PWC_WindowLift_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WinLift_Rq", "DENORM");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WinLift_Rq'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_STR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_STR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_STR_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "6");
  {
    __Wait("1", (5 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "", "7");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_FR_Norm_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 1, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAllJoinedEventsNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 1, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_FR_Norm_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
                        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

    
  TestCommandBegin(__eDiagService, __cDiagService, "enter Extended Session", "8");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.Extended_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "STDS_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'STDS_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'STDS_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Denormalization through Routine for Window RL", "9");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.PWC_WindowLift_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WinLift_Rq", "DENORM");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WinLift_Rq'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_STR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_STR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_STR_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "10");
  {
    __Wait("1", (5 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "", "11");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_RL_Norm_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 1, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAllJoinedEventsNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 1, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_RL_Norm_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
                        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

    
  TestCommandBegin(__eDiagService, __cDiagService, "enter Extended Session", "12");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.Extended_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "STDS_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'STDS_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'STDS_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Denormalization through Routine for Window RR", "13");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.PWC_WindowLift_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WinLift_Rq", "DENORM");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WinLift_Rq'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_STR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_STR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_STR_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "", "14");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_RR_Norm_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 1, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAllJoinedEventsNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 1, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_RR_Norm_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
                        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check whether Windows are Denormed", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Norm_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Norm_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Norm_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Norm_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_4_2_Normalization_Of_Windows()
{
int64 __ifExec10;
int64 __ifExec11;
int64 __ifExec12;
int64 __ifExec13;

  TestCommandBegin(__eFaultMemoryClear, __cFaultMemoryClear, "", "1");
  {
    long __res;
    long __dtc;
    
    DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_always);
    TestStep("Query fault memory", "Clearing fault memory of target Diagnostic ECU 'DMFL_MMA'");
  
    __res = TestWaitForDiagTroubleCodesCleared("DMFL_MMA", -1, cDiagAppTimeoutDefault);
    if (__EvaluateWaitResWithVerdict("DMFL_MMA", __res, 1, "DTC cleared successfully"))
      TestReportWriteFaultMemoryDetails("DMFL_MMA", __bVerdict); }
  TestCommandEnd();


  TestCommandBegin(__eFaultMemoryDtc, __cFaultMemoryDtc, "", "2");
  {
    long  __res;
    dword __statusByte;
   
    DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
    TestStep("Query fault memory", "Reading DTCs from diagnostic ECU 'DMFL_MMA'");
  
    __statusByte = -1;
  
    __res = TestWaitForDiagTroubleCodes("DMFL_MMA", __statusByte, cDiagAppTimeoutDefault);
    if(__EvaluateWaitResWithVerdict("DMFL_MMA", __res, 1))
    {
      __bVerdict = __eVerdictPass;
      TestReportWriteFaultMemoryDetails("DMFL_MMA", __bVerdict);  
    }
  }
  TestCommandEnd();


  
  TestControlStructBegin(__cIf, "Check Whether the Windows are Denormalized", "3");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec10 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = (__expr0);
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s(", __cArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FL_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s)", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FL_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec10 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Manual Open button", "4");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "MANOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait for 5 sec", "5");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Relase Manual Open button", "6");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      {
      snprintf(__cConditionArray, 8192, "%s", "");
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s(", __cArray);
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FL_Norm_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s)", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);

    snprintf(__cConditionArray, 8192, "%s%s", "Check if Normalization is not TRUE (", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
    TestControlStructBegin(__cWhile, __cConditionArray, "0");
    while(1)
    {
      int64 __expr0;
      int64 __condition;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = (__expr0);
  
          snprintf(__cConditionArray, 8192, "%s", "");
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s(", __cArray);
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FL_Norm_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s)", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);
  
      snprintf(__cConditionArray, 8192, "%s%s", "Check if Normalization is not TRUE (", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
      if(__condition == 1)
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : true");
      }
      else
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : false");
      }
      TestControlStructBegin(__cWhileIteration, __cArray2, "7");
      {
      __ReportTableHead5Columns("Condition", __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 2, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Norm_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cWhileCondition, 1);
  
      if(__LoopIsBlocking())
      {
        TestControlStructEnd(__eErrorInTestSystem);
        break;
      }
  
      if (0 == __condition)
      {
        TestControlStructEnd(__eUndefined);
        break;
      }
    }

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_1_Manual_Close_FL", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "6033ca22-15dd-4f4c-ba50-0ca38c85a9e2");
          }


          TestCommandBegin(__eWait, __cWait, "Wait for 2 sec", "9");
          {
            __Wait("1", (2 * 1000000000LL), 1000000000, "");
          }
          TestCommandEnd();

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_1_Manual_Close_FL", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "6033ca22-15dd-4f4c-ba50-0ca38c85a9e2");
          }


          TestCommandBegin(__eWait, __cWait, "Wait for 2 sec", "11");
          {
            __Wait("1", (2 * 1000000000LL), 1000000000, "");
          }
          TestCommandEnd();

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_1_Manual_Close_FL", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "6033ca22-15dd-4f4c-ba50-0ca38c85a9e2");
          }


          TestControlStructEnd(__eUndefined);
        }
        TestControlStructEnd(__eUndefined);
      }
      

      TestCommandBegin(__eCheck, __cCheck, "Check Whether Normalization is TRUE", "13");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FL_Norm_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Check if Window is Closed", "14");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "window Position is 0 mm", "15");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 2, "<=") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FL_Posn_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "");
          __ReportTableRow(0, __cArray2, "<=", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestCommandBegin(__eFaultMemoryClear, __cFaultMemoryClear, "", "17");
  {
    long __res;
    long __dtc;
    
    DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_always);
    TestStep("Query fault memory", "Clearing fault memory of target Diagnostic ECU 'DMFR_MMA'");
  
    __res = TestWaitForDiagTroubleCodesCleared("DMFR_MMA", -1, cDiagAppTimeoutDefault);
    if (__EvaluateWaitResWithVerdict("DMFR_MMA", __res, 1, "DTC cleared successfully"))
      TestReportWriteFaultMemoryDetails("DMFR_MMA", __bVerdict); }
  TestCommandEnd();


  TestCommandBegin(__eFaultMemoryDtc, __cFaultMemoryDtc, "", "18");
  {
    long  __res;
    dword __statusByte;
   
    DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
    TestStep("Query fault memory", "Reading DTCs from diagnostic ECU 'DMFR_MMA'");
  
    __statusByte = -1;
  
    __res = TestWaitForDiagTroubleCodes("DMFR_MMA", __statusByte, cDiagAppTimeoutDefault);
    if(__EvaluateWaitResWithVerdict("DMFR_MMA", __res, 1))
    {
      __bVerdict = __eVerdictPass;
      TestReportWriteFaultMemoryDetails("DMFR_MMA", __bVerdict);  
    }
  }
  TestCommandEnd();


  
  TestControlStructBegin(__cIf, "Check Whether the Windows are Denormalized", "19");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec11 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = (__expr0);
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s(", __cArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FR_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s)", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FR_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec11 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Manual Open button", "20");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "MANOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait for 5 sec", "21");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Relase Manual Open button", "22");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      {
      snprintf(__cConditionArray, 8192, "%s", "");
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s(", __cArray);
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FR_Norm_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s)", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);

    snprintf(__cConditionArray, 8192, "%s%s", "Check if Normalization is not TRUE (", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
    TestControlStructBegin(__cWhile, __cConditionArray, "0");
    while(1)
    {
      int64 __expr0;
      int64 __condition;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = (__expr0);
  
          snprintf(__cConditionArray, 8192, "%s", "");
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s(", __cArray);
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FR_Norm_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s)", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);
  
      snprintf(__cConditionArray, 8192, "%s%s", "Check if Normalization is not TRUE (", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
      if(__condition == 1)
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : true");
      }
      else
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : false");
      }
      TestControlStructBegin(__cWhileIteration, __cArray2, "23");
      {
      __ReportTableHead5Columns("Condition", __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 2, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Norm_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cWhileCondition, 1);
  
      if(__LoopIsBlocking())
      {
        TestControlStructEnd(__eErrorInTestSystem);
        break;
      }
  
      if (0 == __condition)
      {
        TestControlStructEnd(__eUndefined);
        break;
      }
    }

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_2_Manual_Close_FR", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "14a6e4f4-3b2e-406a-b3a2-74aabdcd3ce6");
          }


          TestCommandBegin(__eWait, __cWait, "Wait for 2 sec", "25");
          {
            __Wait("1", (2 * 1000000000LL), 1000000000, "");
          }
          TestCommandEnd();

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_2_Manual_Close_FR", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "14a6e4f4-3b2e-406a-b3a2-74aabdcd3ce6");
          }


          TestCommandBegin(__eWait, __cWait, "Wait for 2 sec", "27");
          {
            __Wait("1", (2 * 1000000000LL), 1000000000, "");
          }
          TestCommandEnd();

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_2_Manual_Close_FR", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "14a6e4f4-3b2e-406a-b3a2-74aabdcd3ce6");
          }


          TestControlStructEnd(__eUndefined);
        }
        TestControlStructEnd(__eUndefined);
      }
      

      TestCommandBegin(__eCheck, __cCheck, "Check Whether Normalization is TRUE", "29");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FR_Norm_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Check if Window is Closed", "30");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Window is 0 mm", "31");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 2, "<=") == 1;
          snprintf(__cArray, 8192, "%s", "PW_FR_Posn_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "");
          __ReportTableRow(0, __cArray2, "<=", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestCommandBegin(__eFaultMemoryClear, __cFaultMemoryClear, "", "33");
  {
    long __res;
    long __dtc;
    
    DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_always);
    TestStep("Query fault memory", "Clearing fault memory of target Diagnostic ECU 'DMRL_MMA'");
  
    __res = TestWaitForDiagTroubleCodesCleared("DMRL_MMA", -1, cDiagAppTimeoutDefault);
    if (__EvaluateWaitResWithVerdict("DMRL_MMA", __res, 1, "DTC cleared successfully"))
      TestReportWriteFaultMemoryDetails("DMRL_MMA", __bVerdict); }
  TestCommandEnd();


  TestCommandBegin(__eFaultMemoryDtc, __cFaultMemoryDtc, "", "34");
  {
    long  __res;
    dword __statusByte;
   
    DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
    TestStep("Query fault memory", "Reading DTCs from diagnostic ECU 'DMRL_MMA'");
  
    __statusByte = -1;
  
    __res = TestWaitForDiagTroubleCodes("DMRL_MMA", __statusByte, cDiagAppTimeoutDefault);
    if(__EvaluateWaitResWithVerdict("DMRL_MMA", __res, 1))
    {
      __bVerdict = __eVerdictPass;
      TestReportWriteFaultMemoryDetails("DMRL_MMA", __bVerdict);  
    }
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  
  TestControlStructBegin(__cIf, "Check Whether the Windows are Denormalized", "36");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec12 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = (__expr0);
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s(", __cArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RL_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s)", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RL_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec12 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Manual Open button", "37");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "MANOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait for 5 sec", "38");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Relase Manual Open button", "39");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      {
      snprintf(__cConditionArray, 8192, "%s", "");
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s(", __cArray);
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RL_Norm_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s)", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);

    snprintf(__cConditionArray, 8192, "%s%s", "Check if Normalization is not TRUE (", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
    TestControlStructBegin(__cWhile, __cConditionArray, "0");
    while(1)
    {
      int64 __expr0;
      int64 __condition;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = (__expr0);
  
          snprintf(__cConditionArray, 8192, "%s", "");
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s(", __cArray);
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RL_Norm_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s)", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);
  
      snprintf(__cConditionArray, 8192, "%s%s", "Check if Normalization is not TRUE (", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
      if(__condition == 1)
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : true");
      }
      else
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : false");
      }
      TestControlStructBegin(__cWhileIteration, __cArray2, "40");
      {
      __ReportTableHead5Columns("Condition", __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 2, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Norm_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cWhileCondition, 1);
  
      if(__LoopIsBlocking())
      {
        TestControlStructEnd(__eErrorInTestSystem);
        break;
      }
  
      if (0 == __condition)
      {
        TestControlStructEnd(__eUndefined);
        break;
      }
    }

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_3_Manual_Close_RL", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "4b91ac28-fb09-4d7b-bae2-677b177607e4");
          }


          TestCommandBegin(__eWait, __cWait, "Wait for 2 sec", "42");
          {
            __Wait("1", (2 * 1000000000LL), 1000000000, "");
          }
          TestCommandEnd();

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_3_Manual_Close_RL", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "4b91ac28-fb09-4d7b-bae2-677b177607e4");
          }


          TestCommandBegin(__eWait, __cWait, "Wait for 2 sec", "44");
          {
            __Wait("1", (2 * 1000000000LL), 1000000000, "");
          }
          TestCommandEnd();

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_3_Manual_Close_RL", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "4b91ac28-fb09-4d7b-bae2-677b177607e4");
          }


          TestControlStructEnd(__eUndefined);
        }
        TestControlStructEnd(__eUndefined);
      }
      

      TestCommandBegin(__eCheck, __cCheck, "Check Whether Normalization is TRUE", "46");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RL_Norm_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "check if Window is Closed", "47");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Window Posiion is 0 mm", "48");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 2, "<=") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RL_Posn_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "");
          __ReportTableRow(0, __cArray2, "<=", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  TestCommandBegin(__eFaultMemoryClear, __cFaultMemoryClear, "", "50");
  {
    long __res;
    long __dtc;
    
    DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_always);
    TestStep("Query fault memory", "Clearing fault memory of target Diagnostic ECU 'DMRR_MMA'");
  
    __res = TestWaitForDiagTroubleCodesCleared("DMRR_MMA", -1, cDiagAppTimeoutDefault);
    if (__EvaluateWaitResWithVerdict("DMRR_MMA", __res, 1, "DTC cleared successfully"))
      TestReportWriteFaultMemoryDetails("DMRR_MMA", __bVerdict); }
  TestCommandEnd();


  TestCommandBegin(__eFaultMemoryDtc, __cFaultMemoryDtc, "", "51");
  {
    long  __res;
    dword __statusByte;
   
    DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
    TestStep("Query fault memory", "Reading DTCs from diagnostic ECU 'DMRR_MMA'");
  
    __statusByte = -1;
  
    __res = TestWaitForDiagTroubleCodes("DMRR_MMA", __statusByte, cDiagAppTimeoutDefault);
    if(__EvaluateWaitResWithVerdict("DMRR_MMA", __res, 1))
    {
      __bVerdict = __eVerdictPass;
      TestReportWriteFaultMemoryDetails("DMRR_MMA", __bVerdict);  
    }
  }
  TestCommandEnd();


  
  TestControlStructBegin(__cIf, "Check Whether the Windows are Denormalized", "52");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec13 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = (__expr0);
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s(", __cArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RR_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s)", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RR_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec13 = 1;

      TestCommandBegin(__eSet, __cSet, "Press Manual Open button", "53");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "MANOPN");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait for 5 sec", "54");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Relase Manual Open button", "55");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
          snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
          snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "NPSD");
          
          __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      {
      snprintf(__cConditionArray, 8192, "%s", "");
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s(", __cArray);
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RR_Norm_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s)", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);

    snprintf(__cConditionArray, 8192, "%s%s", "Check if Normalization is not TRUE (", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
    TestControlStructBegin(__cWhile, __cConditionArray, "0");
    while(1)
    {
      int64 __expr0;
      int64 __condition;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = (__expr0);
  
          snprintf(__cConditionArray, 8192, "%s", "");
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s(", __cArray);
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RR_Norm_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s)", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);
  
      snprintf(__cConditionArray, 8192, "%s%s", "Check if Normalization is not TRUE (", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
      if(__condition == 1)
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : true");
      }
      else
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : false");
      }
      TestControlStructBegin(__cWhileIteration, __cArray2, "56");
      {
      __ReportTableHead5Columns("Condition", __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 2, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Norm_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cWhileCondition, 1);
  
      if(__LoopIsBlocking())
      {
        TestControlStructEnd(__eErrorInTestSystem);
        break;
      }
  
      if (0 == __condition)
      {
        TestControlStructEnd(__eUndefined);
        break;
      }
    }

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_4_Manual_Close_RR", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "02820149-ac0d-4188-a578-712ac6e94b78");
          }


          TestCommandBegin(__eWait, __cWait, "Wait for 2 sec", "58");
          {
            __Wait("1", (2 * 1000000000LL), 1000000000, "");
          }
          TestCommandEnd();

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_4_Manual_Close_RR", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "02820149-ac0d-4188-a578-712ac6e94b78");
          }


          TestCommandBegin(__eWait, __cWait, "Wait for 2 sec", "60");
          {
            __Wait("1", (2 * 1000000000LL), 1000000000, "");
          }
          TestCommandEnd();

          {
            CreateTTEIFFunction("Ttcc5jmo2_BS_5_4_Manual_Close_RR", __eFct, __eLocal);
            CallInterfaceFunction(__cEmpty, __cEmpty, "02820149-ac0d-4188-a578-712ac6e94b78");
          }


          TestControlStructEnd(__eUndefined);
        }
        TestControlStructEnd(__eUndefined);
      }
      

      TestCommandBegin(__eCheck, __cCheck, "Check Whether Normalization is TRUE", "62");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RR_Norm_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Check if Window is Closed", "63");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
          __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


      TestCommandBegin(__eCheck, __cCheck, "Window Position is 0 mm", "64");
      {
        __bVerdict = __eVerdictPass;
        __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
        {
          __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 2, "<=") == 1;
          snprintf(__cArray, 8192, "%s", "PW_RR_Posn_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "");
          __ReportTableRow(0, __cArray2, "<=", 2, __cArray3);
          __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, __cArray5);
          __ReportCell(__cArray5);
          __ReportCellResult(__csr, __ePassFail);
      
          __bVerdict = __bVerdict && __csr;
        }
        __ReportTableEndVerdict("1", __bVerdict);
      }
      TestCommandEnd();


    }
  }
  TestControlStructEnd(__eUndefined);

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


}

void Ttcc5jmo2_BS_5_1_Manual_Close_FL()
{
  TestCommandBegin(__eSet, __cSet, "Press Manual Close Button", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 sec", "2");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "Check the response Signal", "3");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_Adj_FL_Dr_FL_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 2, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAnyJoinedEventNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of any of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
                        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

  TestCommandBegin(__eWait, __cWait, "wait for 5 sec", "4");
  {
    __Wait("1", (5 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "Check the response Signal", "6");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_Adj_FL_Dr_FL_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 0, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAnyJoinedEventNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of any of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
                        __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

}

void Ttcc5jmo2_BS_5_2_Manual_Close_FR()
{
  TestCommandBegin(__eSet, __cSet, "Press Manual Close Button", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 sec", "2");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "Check the response Signal", "3");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_Adj_FR_Dr_FL_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 2, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAnyJoinedEventNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of any of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
                        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

  TestCommandBegin(__eWait, __cWait, "wait for 4 sec", "4");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "Check the response Signal", "6");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_Adj_FR_Dr_FL_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 0, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAnyJoinedEventNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of any of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
                        __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

}

void Ttcc5jmo2_BS_5_3_Manual_Close_RL()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press Manual Close Button", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 sec", "3");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "Check the response Signal", "4");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_Adj_RL_Dr_FL_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 2, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAnyJoinedEventNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of any of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
                        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

  TestCommandBegin(__eWait, __cWait, "wait for 4 sec", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "Check the response Signal", "7");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_Adj_RL_Dr_FL_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 0, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAnyJoinedEventNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of any of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
                        __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


}

void Ttcc5jmo2_BS_5_4_Manual_Close_RR()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press Manual Close Button", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 sec", "3");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "Check the response Signal", "4");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_Adj_RR_Dr_FL_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 2, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAnyJoinedEventNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of any of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
                        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

  TestCommandBegin(__eWait, __cWait, "wait for 4 sec", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eAwaitValueMatch, __cAwaitValueMatch, "Check the response Signal", "7");
  {
  
    dword __signalTimes[1];
    int64 __time;
    long __setFailed;
    __setFailed = 0;
    __time = 1 * 1000000000LL;
    if (__time < 0)
    {
      testStepErrorInTestSystem(0, "1", "Unable to wait for %.3f %s. Please check input parameter.", __time / ((float)1000000000), "s");
    }
    else
    {
      __signalTimes[0] = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3);
                        snprintf(__cArray, elCount(__cArray), "PDU signal '%s'", "PW_Adj_RR_Dr_FL_ST3");
      __setFailed |= testJoinSignal(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray, 1,
                        delegate dword(signal * __cbParam)
                        {
                          __csr = CheckSignalMatch(__cbParam, 0, "==") == 1;
                          return __csr;
                        }) < 0;
      if (__setFailed != 0)
      {
        testStepErrorInTestSystem(0, "1", "Unable to set value condition.");
      }
      else
      {
        int64 __occurrenceTime;
        __bVerdict = testWaitForAnyJoinedEventNS(__time) > 0;
        __ReportTableHead6Columns("Waited for occurrence of any of 1 value condition and signal updates.", __cTSym, __cTOp, __cRefVal, __cActual, __cEmpty, __cRes);
                        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
                        snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
                        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
                        snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
                        __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
                        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
                        __ReportCell(__cArray5);
                        
                        {
                          dword __signalTime;
                          __signalTime = getSignalTime(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3);
                          if (__signalTime > __signalTimes[0])
                          {
                            __ReportCell(__cEmpty);
                          }
                          else
                          {
                            __ReportCell("(no update)");
                            __csr = 0;
                          }
                        }
                        __ReportCellResult(__csr, __ePassFail);
        __ReportTableEndVerdict("1", __bVerdict);
      }
    }
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


}

void Ttcc5jmo2_BS_6_1_Start_Variant_Coding(char Specify_ECU_Name[])
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_1_SecOC_With_Role", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9cf4ae6e-8846-4ca3-a90c-72b92aa3a6da");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_11_Enter_Extended_Session_All_ECUs", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "7095be39-9e8b-4b46-9ed4-65e56cbe801a");
  }


  TestCommandBegin(__eSet, __cSet, "", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      CheckTteVariableGetStringBufferConsistency(Specify_ECU_Name, "Specify_ECU_Name", 8192);
      snprintf(__cArray, 8192, "%s", Specify_ECU_Name);
      {
        sysvar * __systemVariable;
        __systemVariable = sysvarString::`LocalAuthentication::`DiagTarget;
        CheckSysVarSetBufferConsistency(sysSetVariableString(sysvarString::`LocalAuthentication::`DiagTarget, __cArray), __systemVariable.name);
      }
      snprintf(__cArray2, 8192, "%s", "LocalAuthentication::DiagTarget");
      snprintf(__cArray3, 8192, "%s '%s'", __cSysVar, __cArray2);
      snprintf(__cArray4, 8192, "%s", "Specify_ECU_Name");
      
      __ReportTableRow(0, __cArray3, __cAOp, __cArray, __cArray4);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Press Start Coding button", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`SecVarCodingPanel::`Button_CodingStart = 1;
      snprintf(__cArray, 8192, "%s", "Button_CodingStart");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Release Start Coding Button", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`SecVarCodingPanel::`Button_CodingStart = 0;
      snprintf(__cArray, 8192, "%s", "Button_CodingStart");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "7");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that LED is glown", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(sysvarInt::`SecVarCodingPanel::`LED_CodingStart, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "LED_CodingStart");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportCell(@sysvarInt::`SecVarCodingPanel::`LED_CodingStart);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_6_2_Finish_Variant_Coding()
{
  TestCommandBegin(__eSet, __cSet, "Press Coding Finished Button", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`SecVarCodingPanel::`Button_CodingFinished = 1;
      snprintf(__cArray, 8192, "%s", "Button_CodingFinished");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "1");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Release Coding Finished Button", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`SecVarCodingPanel::`Button_CodingFinished = 0;
      snprintf(__cArray, 8192, "%s", "Button_CodingFinished");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "3");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that LED is glown", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(sysvarInt::`SecVarCodingPanel::`LED_CodingFinished, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "LED_CodingFinished");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportCell(@sysvarInt::`SecVarCodingPanel::`LED_CodingFinished);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection()
{
  {
      snprintf(__cConditionArray, 8192, "%s", "");
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s(", __cArray);
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_FL_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_FR_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_RL_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
    snprintf(__cCompareArray, 8192, "%s", "");
    snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_RR_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
    snprintf(__cArray, 8192, "%s", __cCompareArray);
    snprintf(__cCompareArray, 8192, "( %s )", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s)", __cArray);
    snprintf(__cArray, 8192, "%s", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);

    snprintf(__cConditionArray, 8192, "%s%s", "Check Whether Thermal Protection is Inactive for any of the Windows (", __cConditionArray);
    snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
    TestControlStructBegin(__cWhile, __cConditionArray, "0");
    while(1)
    {
      int64 __expr0, __expr1, __expr2, __expr3;
      int64 __condition;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_ThermProt_FL_Actv_ST3, 1, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_ThermProt_FR_Actv_ST3, 1, "!=") == 1;
      }
      {
        __expr1 = __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_ThermProt_RL_Actv_ST3, 1, "!=") == 1;
      }
      {
        __expr2 = __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_ThermProt_RR_Actv_ST3, 1, "!=") == 1;
      }
      {
        __expr3 = __csr;
      }
      __condition = (__expr0 || __expr1 || __expr2 || __expr3);
  
          snprintf(__cConditionArray, 8192, "%s", "");
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s(", __cArray);
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_FL_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_FR_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_RL_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
      snprintf(__cCompareArray, 8192, "%s", "");
      snprintf(__cCompareArray, 8192, "%s%s%s", "PW_ThermProt_RR_Actv_ST3", "!=", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      snprintf(__cArray, 8192, "%s", __cCompareArray);
      snprintf(__cCompareArray, 8192, "( %s )", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s)", __cArray);
      snprintf(__cArray, 8192, "%s", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s %s", "While", __cArray);
  
      snprintf(__cConditionArray, 8192, "%s%s", "Check Whether Thermal Protection is Inactive for any of the Windows (", __cConditionArray);
      snprintf(__cConditionArray, 8192, "%s%s", __cConditionArray, ")");
      if(__condition == 1)
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : true");
      }
      else
      {
        snprintf(__cArray2, 8192, "%s%s", __cConditionArray, " : false");
      }
      TestControlStructBegin(__cWhileIteration, __cArray2, "0");
      {
      __ReportTableHead5Columns("Condition", __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_ThermProt_FL_Actv_ST3, 1, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_FL_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "!=", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_ThermProt_FL_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_ThermProt_FR_Actv_ST3, 1, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_FR_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "!=", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_ThermProt_FR_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_ThermProt_RL_Actv_ST3, 1, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_RL_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "!=", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_ThermProt_RL_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      {
            __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_ThermProt_RR_Actv_ST3, 1, "!=") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_RR_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "!=", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_ThermProt_RR_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cWhileCondition, 1);
  
      if(__LoopIsBlocking())
      {
        TestControlStructEnd(__eErrorInTestSystem);
        break;
      }
  
      if (0 == __condition)
      {
        TestControlStructEnd(__eUndefined);
        break;
      }
    }

      TestCommandBegin(__eWait, __cWait, "", "1");
      {
        __Wait("1", (1 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestControlStructEnd(__eUndefined);
    }
    TestControlStructEnd(__eUndefined);
  }
  

  TestCommandBegin(__eCheck, __cCheck, "Check for Thermal Protection Inactive", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_ThermProt_FL_Actv_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_FL_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_ThermProt_FL_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_ThermProt_FR_Actv_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_FR_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_ThermProt_FR_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_ThermProt_RL_Actv_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_RL_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_ThermProt_RL_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_ThermProt_RR_Actv_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_ThermProt_RR_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_ThermProt_RR_Actv_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_8_Remote_Start(int64 Specify_Remote_Start_State)
{
  TestCommandBegin(__eSet, __cSet, "Specify Remote Start state ", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_RemStart_Stat_ST3::`RemStart_IgnCtrl_Actv_ST3.phys = Specify_Remote_Start_State;
      snprintf(__cArray, 8192, "%s", "RemStart_IgnCtrl_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "Specify_Remote_Start_State");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_RemStart_Stat_ST3::`RemStart_IgnCtrl_Actv_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, Specify_Remote_Start_State, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_9_1_Coding_of_Temperatures()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code Temperatures", "2");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Thermal_Protection_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", 50);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", 60);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", 70);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code Temperatures", "6");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Thermal_Protection_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", 50);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", 60);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", 70);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code Temperatures", "9");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Thermal_Protection_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", 50);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", 60);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", 70);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code Temperatures", "13");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Thermal_Protection_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", 50);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", 60);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", 70);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Temperatures", "16");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Thermal_Protection_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 50, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 50, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 60, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 60, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 70, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 70, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Temperatures", "17");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Thermal_Protection_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 50, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 50, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 60, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 60, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 70, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 70, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Temperatures", "18");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Thermal_Protection_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 50, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 50, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 60, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 60, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 70, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 70, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Temperatures", "19");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Thermal_Protection_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 50, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 50, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 60, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 60, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 70, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 70, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_9_2_Coding_Default_Temperatures()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code Temperatures", "2");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Thermal_Protection_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code Temperatures", "6");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Thermal_Protection_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code Temperatures", "10");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Thermal_Protection_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Code Temperatures", "14");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Thermal_Protection_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2'");
            break;
          }
        }
        {
          __res = __DiagSetParameter(__req, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", 120);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Temperatures", "17");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Thermal_Protection_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Temperatures", "18");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Thermal_Protection_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Temperatures", "19");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Thermal_Protection_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Read the Coded Temperatures", "20");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Thermal_Protection_VariantCoding_Read __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG1\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG2\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __DiagGetParameter(__resp, "WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3", __nDiagValue);
        __csr = CheckSignalMatch(__nDiagValue, 120, "==") == 1;
        snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'WL_Thermal_Protection_VariantCoding/PPWC_SWTS_ASG3\'");
        snprintf(__cArray2, 8192, "%s", __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        __ReportTableRow(0, __cArray2, "==", 120, __cArray3);
        __ReportCell(__nDiagValue);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_10_0_Windows_Close_Recirculation()
{
int64 __ifExec14;
int64 __ifExec15;
int64 __ifExec16;
int64 __ifExec17;

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
  }


  TestCommandBegin(__eWait, __cWait, "", "1");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  
  TestControlStructBegin(__cIf, "", "3");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec14 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FL_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec14 = 1;

      TestCommandBegin(__eSet, __cSet, "Comfort control mode request (aircon)", "4");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3.phys = 0;
          snprintf(__cArray, 8192, "%s", "CC_Md_Rq_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_AUTO_MAN_SNA_AUTO");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.2 s", "5");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Comfort control running request HVAC to Close", "6");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3.phys = 2;
          snprintf(__cArray, 8192, "%s", "CC_Run_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_IDLE_OPN_CLS_SNA_CLOSE");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "7");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Comfort control window front left open/close (aircon)", "8");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 2;
          snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "wait 5 s", "9");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "10");
  {
    if (__DoElse(__ifExec14))
    {
    }
  }
  TestControlStructEnd(__eUndefined);

  
  TestControlStructBegin(__cIf, "", "13");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec15 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FR_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec15 = 1;

      TestCommandBegin(__eSet, __cSet, "Comfort control mode request (aircon)", "14");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3.phys = 0;
          snprintf(__cArray, 8192, "%s", "CC_Md_Rq_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_AUTO_MAN_SNA_AUTO");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.2 s", "15");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Comfort control running request HVAC to Close", "16");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3.phys = 2;
          snprintf(__cArray, 8192, "%s", "CC_Run_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_IDLE_OPN_CLS_SNA_CLOSE");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "17");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Comfort control window front left open/close (aircon)", "18");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3.phys = 2;
          snprintf(__cArray, 8192, "%s", "CC_Win_FR_Rq_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "wait 5 s", "19");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "20");
  {
    if (__DoElse(__ifExec15))
    {
    }
  }
  TestControlStructEnd(__eUndefined);

  
  TestControlStructBegin(__cIf, "", "23");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec16 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RL_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec16 = 1;

      TestCommandBegin(__eSet, __cSet, "Comfort control mode request (aircon)", "24");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3.phys = 0;
          snprintf(__cArray, 8192, "%s", "CC_Md_Rq_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_AUTO_MAN_SNA_AUTO");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.2 s", "25");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Comfort control running request HVAC to Close", "26");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3.phys = 2;
          snprintf(__cArray, 8192, "%s", "CC_Run_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_IDLE_OPN_CLS_SNA_CLOSE");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "27");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Comfort control window front left open/close (aircon)", "28");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3.phys = 2;
          snprintf(__cArray, 8192, "%s", "CC_Win_RL_Rq_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "wait 5 s", "29");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "30");
  {
    if (__DoElse(__ifExec16))
    {
    }
  }
  TestControlStructEnd(__eUndefined);

  
  TestControlStructBegin(__cIf, "", "33");
  {
    int64 __condition;
    {
      int64 __expr0;
      __ifExec17 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "!=") == 1;
      }
      {
        __expr0 = __csr;
      }
      __condition = __expr0;
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RR_Posn_Stat_ST3", "!=", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "!=") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "!=", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec17 = 1;

      TestCommandBegin(__eSet, __cSet, "Comfort control mode request (aircon)", "34");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3.phys = 0;
          snprintf(__cArray, 8192, "%s", "CC_Md_Rq_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_AUTO_MAN_SNA_AUTO");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.2 s", "35");
      {
        __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Comfort control running request HVAC to Close", "36");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3.phys = 2;
          snprintf(__cArray, 8192, "%s", "CC_Run_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_IDLE_OPN_CLS_SNA_CLOSE");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "37");
      {
        __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

      TestCommandBegin(__eSet, __cSet, "Comfort control window front left open/close (aircon)", "38");
      {
        __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
        {
          $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3.phys = 2;
          snprintf(__cArray, 8192, "%s", "CC_Win_RR_Rq_HVAC_ST3");
          snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
          snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
          
          __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3, __cArray2, __cArray4);
          __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
          
      
        }
        __ReportTableEndTestStep("1");
      }
      TestCommandEnd();


      TestCommandBegin(__eWait, __cWait, "wait 5 s", "39");
      {
        __Wait("1", (5 * 1000000000LL), 1000000000, "");
      }
      TestCommandEnd();

    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "40");
  {
    if (__DoElse(__ifExec17))
    {
    }
  }
  TestControlStructEnd(__eUndefined);

  TestCommandBegin(__eSet, __cSet, "Comfort control mode request (aircon)", "43");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Md_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_AUTO_MAN_SNA_MAN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 0.2 s", "44");
  {
    __Wait("1", (0.2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Comfort control running request HVAC to Idle", "45");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "CC_Run_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_IDLE_OPN_CLS_SNA_IDLE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 0.5 s", "46");
  {
    __Wait("1", (0.5 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Comfort control window front left open/close (aircon)", "47");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Comfort control window front left open/close (aircon)", "48");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Comfort control window front left open/close (aircon)", "49");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_RL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Comfort control window front left open/close (aircon)", "50");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_RR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "51");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

}

void Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request()
{
  TestCommandBegin(__eSet, __cSet, "Set Mode as Manual", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Md_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_AUTO_MAN_SNA_MAN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set Direction to Close", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Dir_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Dir_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_OPN_CLS_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Dir_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set Run Command to Close", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Run_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_IDLE_OPN_CLS_SNA_CLOSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Activate Comfort Control to all the Windows", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_FR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_RL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_RR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request()
{
  TestCommandBegin(__eSet, __cSet, "Set Mode as Manual", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Md_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_AUTO_MAN_SNA_MAN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set Direction to Open", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Dir_HVAC_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "CC_Dir_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_OPN_CLS_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Dir_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set Run Command to Open", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Run_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_IDLE_OPN_CLS_SNA_OPEN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Activate Comfort Control to all the Windows", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_FR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_RL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_RR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_10_3_Windows_AUT_CLS_Recirculation_Request()
{
  TestCommandBegin(__eSet, __cSet, "Set Mode as Auto", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "CC_Md_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_AUTO_MAN_SNA_AUTO");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set Direction to Close", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Dir_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Dir_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_OPN_CLS_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Dir_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set Run Command to Close", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Run_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_IDLE_OPN_CLS_SNA_CLOSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Activate Comfort Control to all the Windows", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_FR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_RL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_RR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_10_4_Windows_AUT_OPN_Recirculation_Request()
{
  TestCommandBegin(__eSet, __cSet, "Set Mode as Auto", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "CC_Md_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_AUTO_MAN_SNA_AUTO");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set Direction to Open", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Dir_HVAC_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "CC_Dir_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_OPN_CLS_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Dir_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set Run Command to Open", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Run_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_IDLE_OPN_CLS_SNA_OPEN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Run_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Activate Comfort Control to all the Windows", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_FR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_RL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "CC_Win_RR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_10_3_Windows_Disable_Recirculation_Request()
{
  TestCommandBegin(__eSet, __cSet, "Set Mode as Manual", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Md_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_AUTO_MAN_SNA_MAN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Md_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Set Direction to Open", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Dir_HVAC_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "CC_Dir_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_OPN_CLS_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Dir_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Activate Comfort Control to all the Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_RL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_RR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_11_Enter_Extended_Session_All_ECUs()
{
    
  TestCommandBegin(__eDiagService, __cDiagService, "Enter Extended Start", "0");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.Extended_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "STDS_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'STDS_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'STDS_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enter Extended Start", "1");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.Extended_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "STDS_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'STDS_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'STDS_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enter Extended Start", "2");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.Extended_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "STDS_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'STDS_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'STDS_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enter Extended Start", "3");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.Extended_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "STDS_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'STDS_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'STDS_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_12_1_Select_Rear_Button()
{
  TestCommandBegin(__eSet, __cSet, "Select Rear Windows by Pressing Rear Button", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Rear_Rq_Sw_Psd_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Rear_Rq_Sw_Psd_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "PSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Rear_Rq_Sw_Psd_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check for Rear LED ON", "1");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`LIN::dbNode::`DM::`Door_Stat_LIN_ST3_DOOR::`PW_Rear_Rq_SwLED_Rq_ST3_DOOR, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Rear_Rq_SwLED_Rq_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "TRUE");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`LIN::dbNode::`DM::`Door_Stat_LIN_ST3_DOOR::`PW_Rear_Rq_SwLED_Rq_ST3_DOOR, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_12_2_Deselect_Rear_Button()
{
  TestCommandBegin(__eSet, __cSet, "De-Select Rear Button", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Rear_Rq_Sw_Psd_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Rear_Rq_Sw_Psd_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Rear_Rq_Sw_Psd_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check for Rear Button LED OFF", "1");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`LIN::dbNode::`DM::`Door_Stat_LIN_ST3_DOOR::`PW_Rear_Rq_SwLED_Rq_ST3_DOOR, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Rear_Rq_SwLED_Rq_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "FALSE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`LIN::dbNode::`DM::`Door_Stat_LIN_ST3_DOOR::`PW_Rear_Rq_SwLED_Rq_ST3_DOOR, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_13_Set_AfterRun_Inactive()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Afterrun time is set to 1 min", "2");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Parameter_Basic_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Parameter_Basic_VariantCoding/PPWC_tNachlauf_min", 1);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Parameter_Basic_VariantCoding/PPWC_tNachlauf_min'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Afterrun time is set to 1 min", "6");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Parameter_Basic_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Parameter_Basic_VariantCoding/PPWC_tNachlauf_min", 1);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Parameter_Basic_VariantCoding/PPWC_tNachlauf_min'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Afterrun time is set to 1 min", "10");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Parameter_Basic_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Parameter_Basic_VariantCoding/PPWC_tNachlauf_min", 1);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Parameter_Basic_VariantCoding/PPWC_tNachlauf_min'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Afterrun time is set to 1 min", "14");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Parameter_Basic_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Parameter_Basic_VariantCoding/PPWC_tNachlauf_min", 1);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Parameter_Basic_VariantCoding/PPWC_tNachlauf_min'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  TestCommandBegin(__eSet, __cSet, "Door Latches Closed", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FR_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "DrRLtch_RL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "DrRLtch_RR_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_14_1_Set_Under_Voltage()
{
}

void Ttcc5jmo2_BS_14_2_Set_Over_Voltage()
{
}

void Ttcc5jmo2_BS_14_3_Set_Normal_Voltage()
{
}

void Ttcc5jmo2_BS_15_1_WL_Front_Disabled_or_SS_Front_Active()
{
  TestCommandBegin(__eSet, __cSet, "Set short stroke request front active", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CRCM::`CRCM_BODY1_Container_ST3_CT_Master_Stat_ST3::`PW_F_Oprtn_Sp_Rq_CT_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_F_Oprtn_Sp_Rq_CT_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CRCM::`CRCM_BODY1_Container_ST3_CT_Master_Stat_ST3::`PW_F_Oprtn_Sp_Rq_CT_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_15_2_WL_Front_Enabled_or_SS_Front_Deactive()
{
  TestCommandBegin(__eSet, __cSet, "Set short stroke request front Deactive", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CRCM::`CRCM_BODY1_Container_ST3_CT_Master_Stat_ST3::`PW_F_Oprtn_Sp_Rq_CT_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_F_Oprtn_Sp_Rq_CT_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CRCM::`CRCM_BODY1_Container_ST3_CT_Master_Stat_ST3::`PW_F_Oprtn_Sp_Rq_CT_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_15_3_WL_Rear_Disabled_or_SS_Rear_Active()
{
  TestCommandBegin(__eSet, __cSet, "Set short stroke request Rear active", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CRCM::`CRCM_BODY1_Container_ST3_CT_Master_Stat_ST3::`PW_R_Oprtn_Sp_Rq_CT_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_R_Oprtn_Sp_Rq_CT_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CRCM::`CRCM_BODY1_Container_ST3_CT_Master_Stat_ST3::`PW_R_Oprtn_Sp_Rq_CT_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_15_4_WL_Rear_Enabled_or_SS_Rear_Deactive()
{
  TestCommandBegin(__eSet, __cSet, "Set short stroke request Rear Deactive", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CRCM::`CRCM_BODY1_Container_ST3_CT_Master_Stat_ST3::`PW_R_Oprtn_Sp_Rq_CT_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_R_Oprtn_Sp_Rq_CT_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CRCM::`CRCM_BODY1_Container_ST3_CT_Master_Stat_ST3::`PW_R_Oprtn_Sp_Rq_CT_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_16_1_Emergency_Mode_Active()
{
  TestCommandBegin(__eSet, __cSet, "Disconnect CEIC from Body 1 CAN", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`IL_CAN1::`NODES::`N_CEIC_M::`EnableNode = 0;
      snprintf(__cArray, 8192, "%s", "N_CEIC_M::EnableNode");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive()
{
  TestCommandBegin(__eSet, __cSet, "Connect CEIC to Body 1 CAN", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      @sysvarInt::`IL_CAN1::`NODES::`N_CEIC_M::`EnableNode = 1;
      snprintf(__cArray, 8192, "%s", "N_CEIC_M::EnableNode");
      snprintf(__cArray2, 8192, "%s '%s'", __cSysVar, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportTableRow(0, __cArray2, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_17_1_Activate_Key_Search()
{
  TestCommandBegin(__eSet, __cSet, "Activate Key Search", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_KG_Stat_ST3::`KG_KeySrch_Actv_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "KG_KeySrch_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_KG_Stat_ST3::`KG_KeySrch_Actv_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_17_2_Deactivate_Key_Search()
{
  TestCommandBegin(__eSet, __cSet, "Deactivate Key Search", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_KG_Stat_ST3::`KG_KeySrch_Actv_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "KG_KeySrch_Actv_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_KG_Stat_ST3::`KG_KeySrch_Actv_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close()
{
int64 __ifExec18;

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_12_Key_State", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "df932d2d-0ec0-41bb-9c8d-56a8fd111b8f");
  }


  
  TestControlStructBegin(__cIf, "If any of the Windows is in de-normalized state", "2");
  {
    int64 __condition;
    {
      int64 __expr0, __expr1, __expr2, __expr3;
      __ifExec18 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr0 = __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr1 = __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr2 = __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr3 = __csr;
      }
      __condition = (__expr0 || __expr1 || __expr2 || __expr3);
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s(", __cArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FL_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FR_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RL_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RR_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s)", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FL_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FR_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RL_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RR_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec18 = 1;

      {
        CreateTTEIFFunction("Ttcc5jmo2_BS_4_2_Normalization_Of_Windows", __eFct, __eLocal);
        CallInterfaceFunction(__cEmpty, __cEmpty, "fa43c794-a25b-464f-a0fd-054c6c96e551");
      }


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "4");
  {
    if (__DoElse(__ifExec18))
    {
      {
        CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
        CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
      }


    }
  }
  TestControlStructEnd(__eUndefined);

}

void Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open()
{
int64 __ifExec19;

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_12_Key_State", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "df932d2d-0ec0-41bb-9c8d-56a8fd111b8f");
  }


  
  TestControlStructBegin(__cIf, "If any of the Windows is in de-normalized state", "2");
  {
    int64 __condition;
    {
      int64 __expr0, __expr1, __expr2, __expr3;
      __ifExec19 = 0;
  
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr0 = __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr1 = __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr2 = __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 1, "==") == 1;
      }
      {
        __expr3 = __csr;
      }
      __condition = (__expr0 || __expr1 || __expr2 || __expr3);
  
        snprintf(__cConditionArray, 8192, "%s", "");
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s(", __cArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FL_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s", __cArray, __cCompareArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_FR_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RL_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
        snprintf(__cCompareArray, 8192, "%s", "");
        snprintf(__cCompareArray, 8192, "%s%s%s", "PW_RR_Norm_ST3", "==", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        snprintf(__cArray, 8192, "%s", __cCompareArray);
        snprintf(__cCompareArray, 8192, "( %s )", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s%s%s", __cArray, " or ", __cCompareArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s)", __cArray);
        snprintf(__cArray, 8192, "%s", __cConditionArray);
        snprintf(__cConditionArray, 8192, "%s %s", "If", __cArray);
  
      __ReportConditionTableHead(__cConditionArray, __condition);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FL_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FR_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RL_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, 1, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RR_Norm_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
        __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Norm_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __eTrueFalse); 
      }
      __ReportTableEndCondition(__cIfCondition);
    }
  
    if(__condition)
    {  
      __ifExec19 = 1;

      {
        CreateTTEIFFunction("Ttcc5jmo2_BS_4_2_Normalization_Of_Windows", __eFct, __eLocal);
        CallInterfaceFunction(__cEmpty, __cEmpty, "fa43c794-a25b-464f-a0fd-054c6c96e551");
      }


      {
        CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
        CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
      }


    }
  }
  TestControlStructEnd(__eUndefined);

  TestControlStructBegin(__cElse, "", "5");
  {
    if (__DoElse(__ifExec19))
    {
      {
        CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
        CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
      }


    }
  }
  TestControlStructEnd(__eUndefined);

}

void Ttcc5jmo2_BS_19_1_Drivers_Manual_Open_Front_Windows_for_Disable_Cases()
{
  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "3");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows do not move. Remain in Closed Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows do not move. Remain in Closed Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_19_2_Drivers_Manual_Open_Rear_Windows_for_Disable_Cases()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "4");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Closed Position", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "8");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Closed State", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


}

void Ttcc5jmo2_BS_20_1_Drivers_Manual_Close_Front_Windows_for_Disable_Cases()
{
  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "1");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "3");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows do not move. Remain in Open Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Windows", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows do not move. Remain in Open Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_20_2_Drivers_Manual_Close_Rear_Windows_for_Disable_Cases()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "4");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Open Position", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Windows", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "8");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Open State", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


}

void Ttcc5jmo2_BS_21_Precondition_for_Ign_Start_Cases()
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_1_SecOC_With_Role", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9cf4ae6e-8846-4ca3-a90c-72b92aa3a6da");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_11_Enter_Extended_Session_All_ECUs", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "7095be39-9e8b-4b46-9ed4-65e56cbe801a");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable Motor Start", "4");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableMotorstart_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableMotorstart_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Set Time for Motorstart", "5");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.WL_Parameter_Basic_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Parameter_Basic_VariantCoding/PPWC_tMotorstartSperre_s", 2.5);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Parameter_Basic_VariantCoding/PPWC_tMotorstartSperre_s'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_1_SecOC_With_Role", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9cf4ae6e-8846-4ca3-a90c-72b92aa3a6da");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_11_Enter_Extended_Session_All_ECUs", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "7095be39-9e8b-4b46-9ed4-65e56cbe801a");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMFR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable Motor Start", "11");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableMotorstart_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableMotorstart_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Set Time for Motorstart", "12");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.WL_Parameter_Basic_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Parameter_Basic_VariantCoding/PPWC_tMotorstartSperre_s", 2.5);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Parameter_Basic_VariantCoding/PPWC_tMotorstartSperre_s'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_1_SecOC_With_Role", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9cf4ae6e-8846-4ca3-a90c-72b92aa3a6da");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_11_Enter_Extended_Session_All_ECUs", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "7095be39-9e8b-4b46-9ed4-65e56cbe801a");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRL_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable Motor Start", "18");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableMotorstart_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableMotorstart_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Set Time for Motorstart", "19");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.WL_Parameter_Basic_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Parameter_Basic_VariantCoding/PPWC_tMotorstartSperre_s", 2.5);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Parameter_Basic_VariantCoding/PPWC_tMotorstartSperre_s'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_1_SecOC_With_Role", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9cf4ae6e-8846-4ca3-a90c-72b92aa3a6da");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_11_Enter_Extended_Session_All_ECUs", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "7095be39-9e8b-4b46-9ed4-65e56cbe801a");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_1_Start_Variant_Coding", __eFct, __eLocal);
    AddIFParameterChar("DMRR_MMA");
    CallInterfaceFunction(__cEmpty, __cEmpty, "53bd8c9d-2bd3-41d5-94b7-ec0316b8648c");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "Enable Motor Start", "25");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Function_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Function_VariantCoding/PPWC_enableMotorstart_b", "TRUE");
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Function_VariantCoding/PPWC_enableMotorstart_b'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "Set Time for Motorstart", "26");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.WL_Parameter_Basic_VariantCoding_Write __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "WL_Parameter_Basic_VariantCoding/PPWC_tMotorstartSperre_s", 2.5);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'WL_Parameter_Basic_VariantCoding/PPWC_tMotorstartSperre_s'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "WDBI_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'WDBI_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'WDBI_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_6_2_Finish_Variant_Coding", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "cd40164d-e635-491b-872d-7720bd8b815b");
  }


}

void Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases(int64 Pos1, int64 Pos2, int64 Pos3, int64 pos4)
{
  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_1_SecOC_With_Role", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9cf4ae6e-8846-4ca3-a90c-72b92aa3a6da");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_11_Enter_Extended_Session_All_ECUs", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "7095be39-9e8b-4b46-9ed4-65e56cbe801a");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "", "3");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.PWC_WinLiftAssemblyPosition_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "Assembly_Position", Pos1);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'Assembly_Position'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_STR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_STR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_STR_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "4");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

    
  TestCommandBegin(__eDiagService, __cDiagService, "", "5");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFL_MMA.* __resp;
    DiagRequest DMFL_MMA.PWC_WinLiftAssemblyPosition_RequestResults __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_RRR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_RRR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_RRR_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "routineInfo", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("Routine succesfully completed", 8192);
        snprintf(__cArray2, 8192, "%s", "Routine succesfully completed");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'routineInfo\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __type_of((Pos1-3)) __caplExprVar0;
        __type_of((Pos1+3)) __caplExprVar1;
      
        __DiagGetParameter(__resp, "Position", __nDiagValue);
        __caplExprVar0 = (Pos1-3);
        __caplExprVar1 = (Pos1+3);
        {
          int __res1,__res2;
          __res1 = CheckSignalMatch(__nDiagValue, __caplExprVar0, __cGreaterEqualThan) == 1;
          __res2 = CheckSignalMatch(__nDiagValue, __caplExprVar1, __cLessEqualThan) == 1;
          __csr = __res1 && __res2;
          snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'Position\'");
          snprintf(__cArray2, 8192, "%s", __cArray);
          snprintf(__cArray3, 8192, "%s", "Pos1-3");
          snprintf(__cArray4, 8192, "%s", "Pos1+3");
          snprintf(__cArray5, 8192, "%s", __cArray3);
          snprintf(__cArray6, 8192, "%s", __cArray4);
          ReportRange(__caplExprVar0, __caplExprVar1, __cArray5, __cArray6, __cArray7, 8192);
          __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
          __ReportCell(__nDiagValue);
          __ReportCellResult(__csr, __ePassFail);
        }
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_11_Enter_Extended_Session_All_ECUs", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "7095be39-9e8b-4b46-9ed4-65e56cbe801a");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "", "8");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.PWC_WinLiftAssemblyPosition_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "Assembly_Position", Pos2);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'Assembly_Position'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_STR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_STR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_STR_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "", "9");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMFR_MMA.* __resp;
    DiagRequest DMFR_MMA.PWC_WinLiftAssemblyPosition_RequestResults __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMFR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMFR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_RRR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_RRR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_RRR_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "routineInfo", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("Routine succesfully completed", 8192);
        snprintf(__cArray2, 8192, "%s", "Routine succesfully completed");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'routineInfo\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __type_of((Pos2-3)) __caplExprVar0;
        __type_of((Pos2+3)) __caplExprVar1;
      
        __DiagGetParameter(__resp, "Position", __nDiagValue);
        __caplExprVar0 = (Pos2-3);
        __caplExprVar1 = (Pos2+3);
        {
          int __res1,__res2;
          __res1 = CheckSignalMatch(__nDiagValue, __caplExprVar0, __cGreaterEqualThan) == 1;
          __res2 = CheckSignalMatch(__nDiagValue, __caplExprVar1, __cLessEqualThan) == 1;
          __csr = __res1 && __res2;
          snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'Position\'");
          snprintf(__cArray2, 8192, "%s", __cArray);
          snprintf(__cArray3, 8192, "%s", "Pos2-3");
          snprintf(__cArray4, 8192, "%s", "Pos2+3");
          snprintf(__cArray5, 8192, "%s", __cArray3);
          snprintf(__cArray6, 8192, "%s", __cArray4);
          ReportRange(__caplExprVar0, __caplExprVar1, __cArray5, __cArray6, __cArray7, 8192);
          __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
          __ReportCell(__nDiagValue);
          __ReportCellResult(__csr, __ePassFail);
        }
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_11_Enter_Extended_Session_All_ECUs", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "7095be39-9e8b-4b46-9ed4-65e56cbe801a");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "", "12");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.PWC_WinLiftAssemblyPosition_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "Assembly_Position", Pos3);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'Assembly_Position'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_STR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_STR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_STR_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "", "13");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRL_MMA.* __resp;
    DiagRequest DMRL_MMA.PWC_WinLiftAssemblyPosition_RequestResults __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRL_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRL_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_RRR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_RRR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_RRR_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "routineInfo", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("Routine succesfully completed", 8192);
        snprintf(__cArray2, 8192, "%s", "Routine succesfully completed");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'routineInfo\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __type_of((Pos3-3)) __caplExprVar0;
        __type_of((Pos3+3)) __caplExprVar1;
      
        __DiagGetParameter(__resp, "Position", __nDiagValue);
        __caplExprVar0 = (Pos3-3);
        __caplExprVar1 = (Pos3+3);
        {
          int __res1,__res2;
          __res1 = CheckSignalMatch(__nDiagValue, __caplExprVar0, __cGreaterEqualThan) == 1;
          __res2 = CheckSignalMatch(__nDiagValue, __caplExprVar1, __cLessEqualThan) == 1;
          __csr = __res1 && __res2;
          snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'Position\'");
          snprintf(__cArray2, 8192, "%s", __cArray);
          snprintf(__cArray3, 8192, "%s", "Pos3-3");
          snprintf(__cArray4, 8192, "%s", "Pos3+3");
          snprintf(__cArray5, 8192, "%s", __cArray3);
          snprintf(__cArray6, 8192, "%s", __cArray4);
          ReportRange(__caplExprVar0, __caplExprVar1, __cArray5, __cArray6, __cArray7, 8192);
          __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
          __ReportCell(__nDiagValue);
          __ReportCellResult(__csr, __ePassFail);
        }
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_11_Enter_Extended_Session_All_ECUs", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "7095be39-9e8b-4b46-9ed4-65e56cbe801a");
  }


    
  TestCommandBegin(__eDiagService, __cDiagService, "", "16");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.PWC_WinLiftAssemblyPosition_Start __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
        {
          __res = __DiagSetParameter(__req, "Assembly_Position", pos4);
          if(__res < 0)
          {
            __bVerdict = __eVerdictFail;
            __DiagErrCodeTestStep(__res, "Cannot set diagnostic parameter 'Assembly_Position'");
            break;
          }
        }
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_STR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_STR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_STR_PR'.");
        }
      }
    }
    while(0);
  
  
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


    
  TestCommandBegin(__eDiagService, __cDiagService, "", "17");
  {
    long __res, __paramLen, __bytePos;
    DiagResponse DMRR_MMA.* __resp;
    DiagRequest DMRR_MMA.PWC_WinLiftAssemblyPosition_RequestResults __req;
  
    __bVerdict = __eVerdictPass;
  
    do {
      TestReportResetDiagObjectList();
      DiagSetReportDetailLevel("DMRR_MMA", EnumServiceDetails_onfail);
      // Request aspect
      {
  
        if (0 >= __DiagSendReqAndWaitForResp("DMRR_MMA", __req, __resp, __res, -1, -1, -1, -1, -1, EnumResult_pos, EnumServiceDetails_onfail, EnumSendingMode_physical, EnumSuppressPosResBit_asconfigured, EnumVerdictOnInvalidValues_fail))
          break;
      }
  
      __res = __DiagErrCodeTestStep(__res, "Can't retrieve last response for request! No check possible.") < 0;
      if(__res)
      {
  	  __bVerdict = __eVerdictFail;
        break;
      }
      {
        __res = DiagInterpretAs(__resp, "RC_RRR_PR");
        if(__res != 0)
        {
          __bVerdict = __eVerdictFail;
          __DiagErrCodeTestStep(__res, "Can't interpret response as diagnostic primitive 'RC_RRR_PR'.");
          break;
        }
        else
        {
          TestStepPass( "Received primitive can be interpreted as diagnostic primitive 'RC_RRR_PR'.");
        }
      }
    }
    while(0);
  
  
    // Response, check & read aspect
    {
      __res = 1;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __DiagGetParameter(__resp, "routineInfo", __bDiagValueArray, __cDiagValueArray);
        CheckCaplGenVarStringBufferConsistency(__cDiagValueArray, 8192);
        snprintf(__cArray, 8192, "%s", __cDiagValueArray);
        CheckLiteralGetStringBufferConsistency("Routine succesfully completed", 8192);
        snprintf(__cArray2, 8192, "%s", "Routine succesfully completed");
        __csr = strncmp(__cArray, __cArray2, 8192) == 0;
        snprintf(__cArray3, 8192, "%s", "Diagnostic parameter \'routineInfo\'");
        snprintf(__cArray4, 8192, "%s", __cArray3);
        snprintf(__cArray5, 8192, "%s", "");
        __ReportTableRow(0, __cArray4, "==", __cArray2, __cArray5);
        __ReportCell(__cArray);
        __ReportCellResult(__csr, __ePassFail);
      
        __res = __res && __csr;
      
      }
      {
        double __nDiagValue;
        __type_of((pos4-3)) __caplExprVar0;
        __type_of((pos4+3)) __caplExprVar1;
      
        __DiagGetParameter(__resp, "Position", __nDiagValue);
        __caplExprVar0 = (pos4-3);
        __caplExprVar1 = (pos4+3);
        {
          int __res1,__res2;
          __res1 = CheckSignalMatch(__nDiagValue, __caplExprVar0, __cGreaterEqualThan) == 1;
          __res2 = CheckSignalMatch(__nDiagValue, __caplExprVar1, __cLessEqualThan) == 1;
          __csr = __res1 && __res2;
          snprintf(__cArray, 8192, "%s", "Diagnostic parameter \'Position\'");
          snprintf(__cArray2, 8192, "%s", __cArray);
          snprintf(__cArray3, 8192, "%s", "pos4-3");
          snprintf(__cArray4, 8192, "%s", "pos4+3");
          snprintf(__cArray5, 8192, "%s", __cArray3);
          snprintf(__cArray6, 8192, "%s", __cArray4);
          ReportRange(__caplExprVar0, __caplExprVar1, __cArray5, __cArray6, __cArray7, 8192);
          __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
          __ReportCell(__nDiagValue);
          __ReportCellResult(__csr, __ePassFail);
        }
      
        __res = __res && __csr;
      
      }
      __ReportTableEndVerdict(__cEvaluateResponse, __res);
  	__bVerdict = __bVerdict && __res;
    }
    if (__bVerdict == __eVerdictFail)
      TestReportWriteDiagObjectList();
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_23_1_Change_Body_Style_Fault_Active()
{
  TestCommandBegin(__eSet, __cSet, "Selecting \"FW\" Body Style", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List01_BodyStyle_ST3.phys = 0;
      snprintf(__cArray, 8192, "%s", "EVC_List01_BodyStyle_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List01_BodyStyle_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_BS_23_2_Default_Body_Style_Fault_Deactive()
{
  TestCommandBegin(__eSet, __cSet, "Selecting \"FC\" Body Style", "0");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List01_BodyStyle_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "EVC_List01_BodyStyle_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_EVC_CfgList_01_08_Pr5_ST3::`EVC_List01_BodyStyle_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


}

void Ttcc5jmo2_Tet_TtInit()
{

}

void Ttcc5jmo2_Tet_Tc0()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc0", __eTcDef, __eLocal);  
  CallInterfaceFunction("Initial_Setup", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc0()
{	
  SetBreakOnFail(1);

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_1_SecOC_With_Role", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9cf4ae6e-8846-4ca3-a90c-72b92aa3a6da");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_2_Start_Values", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eea3807c-394d-4e49-aeb0-77cb2e43cb45");
  }


}

void Ttcc5jmo2_Tet_Tc1()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc1", __eTcDef, __eLocal);  
  CallInterfaceFunction("Code temperatures for Thermal Protection Cases", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc1()
{	
  SetBreakOnFail(1);

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_9_1_Coding_of_Temperatures", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "6fd3530e-f726-469d-b169-7be587e7f87e");
  }


}

void Ttcc5jmo2_Tet_Tc2()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc2", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Button released window stops [EB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc2()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc2_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


    TestCommandBegin(__eWait, __cWait, "Wait 3 s", "1");
    {
      __Wait("1", (3 * 1000000000LL), 1000000000, "");
    }
    TestCommandEnd();

    TestCommandBegin(__eCheck, __cCheck, "Check if the Windows are in Closed State", "2");
    {
      __bVerdict = __eVerdictPass;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      __ReportTableEndVerdict("1", __bVerdict);
    }
    TestCommandEnd();


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "6");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows start Opening", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "10");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Stop in Intermediate Position", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "14");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "16");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows start Opening", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "18");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "20");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Stop in Intermediate Position", "21");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc2_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc3()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc3", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window opening by denormed window [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc3()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc3_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_4_1_Denormalization_Of_Windows", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "587cc6a5-d2eb-42ea-b5ca-ef7a043f66b2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "2");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "7");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "9");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "18");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "20");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "21");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "22");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "24");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc3_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_4_2_Normalization_Of_Windows", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "fa43c794-a25b-464f-a0fd-054c6c96e551");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc4()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc4", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window opens emergency mode active [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc4()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc4_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "7");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "9");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "14");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "16");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "18");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "20");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "21");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "22");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc4_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc5()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc5", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Window does not move when key is outside [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc5()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc5_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_12_Key_State", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "df932d2d-0ec0-41bb-9c8d-56a8fd111b8f");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_1_Drivers_Manual_Open_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "d4f07223-a54c-4e3b-9343-87d0516cde7c");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_2_Drivers_Manual_Open_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1f4eeee6-b8f1-4661-b5d3-0321c8cb8e93");
  }



}

void Ttcc5jmo2_Tet_Tc5_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_12_Key_State", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "df932d2d-0ec0-41bb-9c8d-56a8fd111b8f");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc6()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc6", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window does not move when afterrun is inactive [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc6()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc6_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_13_Set_AfterRun_Inactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4564fc41-6670-428f-87ca-fab768bf19ad");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_3_2_Disable_VSL_Living", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "0e733b83-0031-415b-a65b-a0f97dea50ce");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 70 s", "4");
  {
    __Wait("1", (70 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_1_Drivers_Manual_Open_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "d4f07223-a54c-4e3b-9343-87d0516cde7c");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_2_Drivers_Manual_Open_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1f4eeee6-b8f1-4661-b5d3-0321c8cb8e93");
  }



}

void Ttcc5jmo2_Tet_Tc6_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_3_1_Enable_VSL_Living", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3b880703-c0fa-4b27-bf3d-b0f22e9e21b4");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc7()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc7", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window does not move when remote start is active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc7()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc7_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_1_Drivers_Manual_Open_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "d4f07223-a54c-4e3b-9343-87d0516cde7c");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_2_Drivers_Manual_Open_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1f4eeee6-b8f1-4661-b5d3-0321c8cb8e93");
  }



}

void Ttcc5jmo2_Tet_Tc7_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc8()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc8", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Window does not move undervoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc8()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc8_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_1_Set_Under_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "f4589989-93b4-4e85-98a7-5db802bde37a");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_1_Drivers_Manual_Open_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "d4f07223-a54c-4e3b-9343-87d0516cde7c");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_2_Drivers_Manual_Open_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1f4eeee6-b8f1-4661-b5d3-0321c8cb8e93");
  }



}

void Ttcc5jmo2_Tet_Tc8_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc9()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc9", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Window does not move overvoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc9()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc9_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_2_Set_Over_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b30d40b0-14c6-4a28-8219-c77680f72ca4");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_1_Drivers_Manual_Open_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "d4f07223-a54c-4e3b-9343-87d0516cde7c");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_2_Drivers_Manual_Open_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1f4eeee6-b8f1-4661-b5d3-0321c8cb8e93");
  }



}

void Ttcc5jmo2_Tet_Tc9_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc10()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc10", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_Window does not move engine start [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc10()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc10_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_21_Precondition_for_Ign_Start_Cases", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "34cfd5e9-d0c6-4bb6-857f-2f3faf8a0a5c");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(5);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 100 ms", "3");
  {
    __Wait("1", (100 * 1000000LL), 1000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_1_Drivers_Manual_Open_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "d4f07223-a54c-4e3b-9343-87d0516cde7c");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(5);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 100 ms", "9");
  {
    __Wait("1", (100 * 1000000LL), 1000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_2_Drivers_Manual_Open_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1f4eeee6-b8f1-4661-b5d3-0321c8cb8e93");
  }



}

void Ttcc5jmo2_Tet_Tc10_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc11()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc11", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_07_Window does not move WL_front_disabled [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc11()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc11_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_1_WL_Front_Disabled_or_SS_Front_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ae9024c2-1fe7-444d-9504-935f3f2f281e");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_1_Drivers_Manual_Open_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "d4f07223-a54c-4e3b-9343-87d0516cde7c");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "8");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start moving / Opening", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "10");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Opened Completely", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "12");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "14");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Opened State", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc11_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_2_WL_Front_Enabled_or_SS_Front_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "36ebd0ff-570b-46d0-8c57-033245289cc9");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc12()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc12", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_08_Window does not move short stroke request rear active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc12()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc12_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_3_WL_Rear_Disabled_or_SS_Rear_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "53af52eb-3369-488e-bbd8-a44e64cfa7a1");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "5");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows start moving / Opening", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "7");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows opened Completely", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "9");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "11");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Open Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_19_2_Drivers_Manual_Open_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1f4eeee6-b8f1-4661-b5d3-0321c8cb8e93");
  }



}

void Ttcc5jmo2_Tet_Tc12_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_4_WL_Rear_Enabled_or_SS_Rear_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "a1b9162c-2edb-4499-a69b-dff2415b4db3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc13()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc13", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_09_Window does not move temperature protection active - FL [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc13()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc13_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_9_1_Coding_of_Temperatures", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "6fd3530e-f726-469d-b169-7be587e7f87e");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_FL_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "5eaf7aa0-faf5-4898-baac-4ae4987b7d03");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Left Window", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Left Window do not move. Remain in Closed Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Left Window", "9");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "11");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Left Windows do not move. Remain in Closed Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc13_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc14()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc14", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_10_Window do not move temperature protection active - FR [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc14()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc14_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_FR_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b545d090-ff7c-480b-9d66-c82a3a6fde00");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Right Window", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Right Window do not move. Remain in Closed Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Right Window", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "10");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Right Window do not move. Remain in Closed Position", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc14_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc15()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc15", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_11_Window do not move temperature protection active - RL [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc15()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc15_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_RL_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1b6e1ac3-a2f0-4e08-b169-e148e6ffc876");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Left Window", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Left Window do not move. Remain in Closed Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Left Window", "9");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "11");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Left Window do not move. Remain in Closed State", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc15_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc16()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc16", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_12_Window do not move temperature protection active - RR [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc16()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc16_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_RR_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4d50ac40-67aa-43f8-85b6-c82827febb4f");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Right Window", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Right Window do not move. Remain in Closed Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Left Window", "9");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "11");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Right Window do not move. Remain in Closed State", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc16_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc17()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc17", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Window opening interrupted remote start active [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc17()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc17_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "4");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving / Opening", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Stop immediately", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "12");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Intermediate Position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "18");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start Moving / Opening", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "21");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows stop immediately", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "26");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Intermediate Position", "27");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc17_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc18()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc18", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window manual opening interrupted, wrong ignition state - IGN_LOCK [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc18()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc18_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "4");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving / Opening", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Stop immediately", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "12");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Intermediate Position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "18");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start Moving / Opening", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "21");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows stop immediately", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "26");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Intermediate Position", "27");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc18_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc19()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc19", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window manual opening interrupted, wrong ignition state - IGN_OFF [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc19()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc19_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "4");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving / Opening", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Stop immediately", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "12");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Intermediate Position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "18");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start Moving / Opening", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "21");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows stop immediately", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "26");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Intermediate Position", "27");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc19_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc20()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc20", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Window opening interrupted afterrun inactive [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc20()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc20_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_13_Set_AfterRun_Inactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4564fc41-6670-428f-87ca-fab768bf19ad");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_3_2_Disable_VSL_Living", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "0e733b83-0031-415b-a65b-a0f97dea50ce");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 58 s", "4");
  {
    __Wait("1", (58 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "8");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving / Opening", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Afterrun is deactivated after timeout. Front windows stop moving immediately,", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "13");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Intermediate Position", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 58 s", "19");
  {
    __Wait("1", (58 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "22");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "24");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start Moving / Opening", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Afterrun is deactivated after timeout. Rear windows stop moving immediately,", "26");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "27");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "28");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "29");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Intermediate Position", "30");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc20_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc21()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc21", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Window opening interrupted window opened [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc21()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc21_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "4");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving / Opening", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Front moving windows stop when open position is reached", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "10");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Open Position", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "14");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "16");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start Moving / Opening", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "18");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Rear moving windows stop when open position is reached", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "20");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "21");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "22");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Open Position", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc21_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc22()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc22", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_Windows manual opening interrupted and disabled - send vehicle State not valid [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc22()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc22_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "4");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving/Opening", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Open Driver\'s Door", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(10);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Still Moving/Opening", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Stop in Intermediate Position", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Open for Front Windows", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "13");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remians in Intermediate Position", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "15");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "16");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "17");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remians in Intermediate Position", "18");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Close Driver\'s Door", "20");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "26");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start moving / Opening", "27");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Open Driver\'s Door", "28");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(10);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Still moving /Opening", "30");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Stop in Intermediate Position", "32");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "33");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "34");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "35");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Stop in Intermediate Position", "36");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "39");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "40");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "41");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Intermediate Position", "42");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc22_Completion()
{  
  TestCompletionBegin();
  {
    TestCommandBegin(__eSet, __cSet, "Close Driver\'s Door", "44");
    {
      __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      __ReportTableEndTestStep("1");
    }
    TestCommandEnd();


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
      AddIFParameterInt64(2);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc23()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc23", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Button released window stops [EB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc23()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc23_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


    TestCommandBegin(__eWait, __cWait, "Wait 3 s", "1");
    {
      __Wait("1", (3 * 1000000000LL), 1000000000, "");
    }
    TestCommandEnd();

    TestCommandBegin(__eCheck, __cCheck, "Check if the Windows are in Closed State", "2");
    {
      __bVerdict = __eVerdictPass;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
        __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      __ReportTableEndVerdict("1", __bVerdict);
    }
    TestCommandEnd();


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows Start moving immediately except Front Left", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows Stop moving immediately except Front Left", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc23_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc24()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc24", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window opening by denormed window [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc24()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc24_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_4_1_Denormalization_Of_Windows", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "587cc6a5-d2eb-42ea-b5ca-ef7a043f66b2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "2");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc24_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_4_2_Normalization_Of_Windows", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "fa43c794-a25b-464f-a0fd-054c6c96e551");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc25()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc25", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window opens emergency mode active [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc25()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc25_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "3");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc25_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc26()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc26", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Window does not move when key is outside [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc26()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc26_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_12_Key_State", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "df932d2d-0ec0-41bb-9c8d-56a8fd111b8f");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc26_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_12_Key_State", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "df932d2d-0ec0-41bb-9c8d-56a8fd111b8f");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc27()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc27", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window does not move when afterrun is inactive [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc27()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc27_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_13_Set_AfterRun_Inactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4564fc41-6670-428f-87ca-fab768bf19ad");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_3_2_Disable_VSL_Living", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "0e733b83-0031-415b-a65b-a0f97dea50ce");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "7");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc27_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_3_1_Enable_VSL_Living", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3b880703-c0fa-4b27-bf3d-b0f22e9e21b4");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc28()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc28", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window does not move when remote start is active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc28()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc28_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc28_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc29()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc29", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Window does not move undervoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc29()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc29_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_1_Set_Under_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "f4589989-93b4-4e85-98a7-5db802bde37a");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc29_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc30()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc30", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Window does not move overvoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc30()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc30_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_2_Set_Over_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b30d40b0-14c6-4a28-8219-c77680f72ca4");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc30_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc31()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc31", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_Window does not move engine start [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc31()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc31_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_21_Precondition_for_Ign_Start_Cases", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "34cfd5e9-d0c6-4bb6-857f-2f3faf8a0a5c");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(5);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "6");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc31_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc32()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc32", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_07_Window does not move CSL active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc32()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc32_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_13_1_Child_Security_Lock_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9dc4d60c-f737-4f9c-bd61-d2b416d76160");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Closed Position. Passenger Window start opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Closed Position. Passenger Window Opens Completely", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc32_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_13_0_Child_Security_Lock_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "804492b6-9f3d-4fb1-8bfa-7cbc3cf1c35d");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc33()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc33", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_08_Window does not move WL_front_disabled [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc33()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc33_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_1_WL_Front_Disabled_or_SS_Front_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ae9024c2-1fe7-444d-9504-935f3f2f281e");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows do not move. Remain in Closed Position. Rear Windows start opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows do not move. Remain in Closed Position. Rear Windows stops in Intermediate Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc33_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_2_WL_Front_Enabled_or_SS_Front_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "36ebd0ff-570b-46d0-8c57-033245289cc9");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc34()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc34", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_09_Window does not move short stroke request rear active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc34()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc34_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_3_WL_Rear_Disabled_or_SS_Rear_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "53af52eb-3369-488e-bbd8-a44e64cfa7a1");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Closed Position. Passenger Windows start opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Closed Position. Passenger Window stops in Intermediate Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc34_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_4_WL_Rear_Enabled_or_SS_Rear_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "a1b9162c-2edb-4499-a69b-dff2415b4db3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc35()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc35", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_10_Window do not move temperature protection active - Passenger [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc35()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc35_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_FR_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b545d090-ff7c-480b-9d66-c82a3a6fde00");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Passenger Window do not move. Remain in Closed Position. ", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Passenger Window do not move. Remain in Closed Position.", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc35_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc36()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc36", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_11_Window do not move temperature protection active - RL [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc36()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc36_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_RL_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1b6e1ac3-a2f0-4e08-b169-e148e6ffc876");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Left Window do not move. Remain in Closed Position. ", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Left Window do not move. Remain in Closed Position.", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc36_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc37()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc37", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_12_Window do not move temperature protection active - RR [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc37()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc37_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_RR_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4d50ac40-67aa-43f8-85b6-c82827febb4f");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Right Window do not move. Remain in Closed Position. ", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Right Window do not move. Remain in Closed Position.", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc37_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc38()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc38", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Window opening interrupted remote start active [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc38()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc38_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows P, RL and RR start Opening", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Windows P, RL and RR Stop moving immediately", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc38_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc39()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc39", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window manual opening interrupted, wrong ignition state - IGN_LOCK [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc39()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc39_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows P, RL and RR start Opening", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Windows P, RL and RR Stop moving immediately", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc39_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc40()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc40", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window manual opening interrupted, wrong ignition state - IGN_OFF [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc40()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc40_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows P, RL and RR start Opening", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Windows P, RL and RR Stop moving immediately", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc40_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc41()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc41", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Window opening interrupted afterrun inactive [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc41()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc41_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_13_Set_AfterRun_Inactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4564fc41-6670-428f-87ca-fab768bf19ad");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_3_2_Disable_VSL_Living", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "0e733b83-0031-415b-a65b-a0f97dea50ce");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 58 s", "4");
  {
    __Wait("1", (58 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows P, RL and RR start Opening", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Open Front Right Door", "7");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FR_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Afterrun is deactivated after timeout. All windows stop moving immediately", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "10");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc41_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_3_1_Enable_VSL_Living", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3b880703-c0fa-4b27-bf3d-b0f22e9e21b4");
    }


    TestCommandBegin(__eSet, __cSet, "Close Front Right Door", "14");
    {
      __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_FR_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      __ReportTableEndTestStep("1");
    }
    TestCommandEnd();


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc42()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc42", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Window opening interrupted window opened [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc42()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc42_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows P, RL and RR start Opening", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "3");
  {
    __Wait("1", (5 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Windows P, RL and RR Stop moving after Open position is reached", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc42_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc43()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc43", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_Window interrupted by driver control [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc43()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc43_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Passenger Window start Opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "7");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Passenger Window Stop moving immediately", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "12");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows RL and RR start Opening", "16");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "19");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "20");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "21");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Windows RL and RR Stop moving immediately", "22");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "26");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "28");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc43_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc44()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc44", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Window opens emergency mode active CSL active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc44()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc44_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_13_1_Child_Security_Lock_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9dc4d60c-f737-4f9c-bd61-d2b416d76160");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "7");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "9");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "13");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc44_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_13_0_Child_Security_Lock_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "804492b6-9f3d-4fb1-8bfa-7cbc3cf1c35d");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc45()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc45", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window opens emergency mode active key not detected [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc45()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc45_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_17_2_Deactivate_Key_Search", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b749aff5-5ae5-426d-9e15-c07250ef677b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "6");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "8");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "15");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "16");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "17");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "18");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "19");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "20");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "21");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "22");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "23");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "24");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc45_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_17_1_Activate_Key_Search", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "2002c960-7004-4b82-8877-a8571c219dd9");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc46()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc46", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window opens emergency mode active no interruption [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc46()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc46_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "9");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "17");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "18");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "19");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "20");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "22");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_RUNNING");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "23");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "24");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "25");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "26");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "27");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "28");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc46_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc47()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc47", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Window opens emergency mode active no interruption afterrun inactive [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc47()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc47_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_13_Set_AfterRun_Inactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4564fc41-6670-428f-87ca-fab768bf19ad");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "10");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Front Windows Continue to Open ", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "12");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "21");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "22");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "23");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "24");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_13_Set_AfterRun_Inactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4564fc41-6670-428f-87ca-fab768bf19ad");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "28");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Rear Windows continue to Open", "29");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "30");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "31");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "32");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "33");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc47_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc48()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc48", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Window opens emergency mode active no interruption remote start active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc48()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc48_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Front Windows", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "9");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Front Windows Continue to Open ", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Windows", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Open Button for Rear Windows", "20");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "21");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANOPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "22");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "26");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Rear Windows continue to Open", "27");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Rear Windows", "28");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "29");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "30");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Rear Windows", "31");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc48_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc49()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc49", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_Window opens emergency mode active no interruption CSL active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc49()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc49_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "3");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Front Left Window", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_13_1_Child_Security_Lock_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9dc4d60c-f737-4f9c-bd61-d2b416d76160");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "8");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Front Left Window", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc49_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_13_0_Child_Security_Lock_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "804492b6-9f3d-4fb1-8bfa-7cbc3cf1c35d");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc50()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc50", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_07_Window opens emergency mode active no interruption undervoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc50()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc50_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "3");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Front Left Window", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_1_Set_Under_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "f4589989-93b4-4e85-98a7-5db802bde37a");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "8");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Front Left Window", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc50_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc51()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc51", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_08_Window opens emergency mode active no interruption overvoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc51()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc51_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "3");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Front Left Window", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_2_Set_Over_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b30d40b0-14c6-4a28-8219-c77680f72ca4");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "8");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Front Left Window", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc51_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc52()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc52", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_09_Window opens emergency mode active no interruption CRCM [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc52()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc52_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "3");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Front Left Window", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_1_WL_Front_Disabled_or_SS_Front_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ae9024c2-1fe7-444d-9504-935f3f2f281e");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_3_WL_Rear_Disabled_or_SS_Rear_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "53af52eb-3369-488e-bbd8-a44e64cfa7a1");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_3_WL_Rear_Disabled_or_SS_Rear_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "53af52eb-3369-488e-bbd8-a44e64cfa7a1");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "10");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of Front Left Window", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc52_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_2_WL_Front_Enabled_or_SS_Front_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "36ebd0ff-570b-46d0-8c57-033245289cc9");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_4_WL_Rear_Enabled_or_SS_Rear_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "a1b9162c-2edb-4499-a69b-dff2415b4db3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc53()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc53", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Button released window stops [EB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc53()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc53_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "4");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving/Closing", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Windows", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "8");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Stop in Intermediate Position", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "12");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "14");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start moving / Closing", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Windows", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "18");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Stop in Intermediate Position", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc53_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc54()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc54", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window closing by denormed window [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc54()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc54_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_4_1_Denormalization_Of_Windows", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "587cc6a5-d2eb-42ea-b5ca-ef7a043f66b2");
    }


    TestCommandBegin(__eWait, __cWait, "Wait 3 s", "2");
    {
      __Wait("1", (3 * 1000000000LL), 1000000000, "");
    }
    TestCommandEnd();

    TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "3");
    {
      __bVerdict = __eVerdictPass;
      __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
        __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
        __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
        __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      {
        __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
        __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
        __ReportCell(__cArray5);
        __ReportCellResult(__csr, __ePassFail);
    
        __bVerdict = __bVerdict && __csr;
      }
      __ReportTableEndVerdict("1", __bVerdict);
    }
    TestCommandEnd();


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "7");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving/Closing", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "9");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Closed Completely", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Windows", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "13");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Closed Position", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "17");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "18");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "19");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start moving / Closing", "20");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "21");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Closed Completely", "22");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Windows", "23");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "24");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "25");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Closed Position", "26");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc54_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc55()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc55", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Window does not move when key is outside [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc55()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc55_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_12_Key_State", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "df932d2d-0ec0-41bb-9c8d-56a8fd111b8f");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_1_Drivers_Manual_Close_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "dd609b2f-8146-4570-8516-83157985a798");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_2_Drivers_Manual_Close_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "94b9e284-e86b-4f9a-bce3-3ef7404346ec");
  }



}

void Ttcc5jmo2_Tet_Tc55_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_12_Key_State", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "df932d2d-0ec0-41bb-9c8d-56a8fd111b8f");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc56()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc56", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window does not move when afterrun is inactive [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc56()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc56_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_13_Set_AfterRun_Inactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4564fc41-6670-428f-87ca-fab768bf19ad");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_3_2_Disable_VSL_Living", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "0e733b83-0031-415b-a65b-a0f97dea50ce");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 70 s", "4");
  {
    __Wait("1", (70 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_1_Drivers_Manual_Close_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "dd609b2f-8146-4570-8516-83157985a798");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_2_Drivers_Manual_Close_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "94b9e284-e86b-4f9a-bce3-3ef7404346ec");
  }



}

void Ttcc5jmo2_Tet_Tc56_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_3_1_Enable_VSL_Living", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3b880703-c0fa-4b27-bf3d-b0f22e9e21b4");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc57()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc57", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window does not move when remote start is active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc57()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc57_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_1_Drivers_Manual_Close_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "dd609b2f-8146-4570-8516-83157985a798");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_2_Drivers_Manual_Close_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "94b9e284-e86b-4f9a-bce3-3ef7404346ec");
  }



}

void Ttcc5jmo2_Tet_Tc57_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc58()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc58", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Window does not move undervoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc58()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc58_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_1_Set_Under_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "f4589989-93b4-4e85-98a7-5db802bde37a");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_1_Drivers_Manual_Close_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "dd609b2f-8146-4570-8516-83157985a798");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_2_Drivers_Manual_Close_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "94b9e284-e86b-4f9a-bce3-3ef7404346ec");
  }



}

void Ttcc5jmo2_Tet_Tc58_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc59()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc59", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Window does not move overvoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc59()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc59_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_2_Set_Over_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b30d40b0-14c6-4a28-8219-c77680f72ca4");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_1_Drivers_Manual_Close_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "dd609b2f-8146-4570-8516-83157985a798");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_2_Drivers_Manual_Close_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "94b9e284-e86b-4f9a-bce3-3ef7404346ec");
  }



}

void Ttcc5jmo2_Tet_Tc59_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc60()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc60", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_Window does not move engine start [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc60()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc60_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_21_Precondition_for_Ign_Start_Cases", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "34cfd5e9-d0c6-4bb6-857f-2f3faf8a0a5c");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(5);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 100 ms", "3");
  {
    __Wait("1", (100 * 1000000LL), 1000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_1_Drivers_Manual_Close_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "dd609b2f-8146-4570-8516-83157985a798");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(5);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_2_Drivers_Manual_Close_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "94b9e284-e86b-4f9a-bce3-3ef7404346ec");
  }



}

void Ttcc5jmo2_Tet_Tc60_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc61()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc61", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_07_Window does not move WL_front_disabled [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc61()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc61_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_1_WL_Front_Disabled_or_SS_Front_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ae9024c2-1fe7-444d-9504-935f3f2f281e");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_1_Drivers_Manual_Close_Front_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "dd609b2f-8146-4570-8516-83157985a798");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "8");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start moving / Closing", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "10");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Closed Completely", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Windows", "12");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "14");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Closed State", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc61_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_2_WL_Front_Enabled_or_SS_Front_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "36ebd0ff-570b-46d0-8c57-033245289cc9");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc62()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc62", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_08_Window does not move short stroke request rear active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc62()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc62_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_3_WL_Rear_Disabled_or_SS_Rear_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "53af52eb-3369-488e-bbd8-a44e64cfa7a1");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "5");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows start moving / Closing", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "7");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Closed Completely", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Windows", "9");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "11");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Close Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_20_2_Drivers_Manual_Close_Rear_Windows_for_Disable_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "94b9e284-e86b-4f9a-bce3-3ef7404346ec");
  }



}

void Ttcc5jmo2_Tet_Tc62_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_4_WL_Rear_Enabled_or_SS_Rear_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "a1b9162c-2edb-4499-a69b-dff2415b4db3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc63()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc63", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_09_Window do not move temperature protection active - FL [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc63()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc63_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_9_1_Coding_of_Temperatures", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "6fd3530e-f726-469d-b169-7be587e7f87e");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_FL_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "5eaf7aa0-faf5-4898-baac-4ae4987b7d03");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Left Window", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Left Window do not move. Remain in Open Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Open Button for Front Left Window", "9");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "11");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Left Windows do not move. Remain in Open  Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc63_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc64()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc64", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_10_Window do not move temperature protection active - FR [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc64()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc64_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_FR_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b545d090-ff7c-480b-9d66-c82a3a6fde00");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Right Window", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Right Window do not move. Remain in Opened Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Right Window", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "10");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Right Window do not move. Remain in Opened Position", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc64_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc65()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc65", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_11_Window do not move temperature protection active - RL [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc65()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc65_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_RL_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1b6e1ac3-a2f0-4e08-b169-e148e6ffc876");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Left Window", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Left Window do not move. Remain in Opened Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Left Window", "9");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "11");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Left Window do not move. Remain in Opened State", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc65_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc66()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc66", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_12_Window do not move temperature protection active - RR [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc66()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc66_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_RR_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4d50ac40-67aa-43f8-85b6-c82827febb4f");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Right Window", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Right Window do not move. Remain in Opened Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Left Window", "9");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "11");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Right Window do not move. Remain in Opened State", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc66_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc67()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc67", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Window closing interrupted remote start active [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc67()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc67_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "4");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving / Clsoing", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Stop immediately", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Windows", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "12");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Intermediate Position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "18");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start Moving / Closing", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "21");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows stop immediately", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Windows", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "26");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Intermediate Position", "27");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc67_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc68()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc68", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window manual closing interrupted, wrong ignition state - IGN_LOCK [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc68()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc68_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "4");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving / Clsoing", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Stop immediately", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Windows", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "12");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Intermediate Position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "18");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start Moving / Closing", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "21");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows stop immediately", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Windows", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "26");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Intermediate Position", "27");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc68_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc69()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc69", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window manual closing interrupted, wrong ignition state - IGN_OFF [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc69()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc69_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "4");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving / Clsoing", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "7");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Stop immediately", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Windows", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "12");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Intermediate Position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "18");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start Moving / Closing", "19");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "21");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows stop immediately", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Windows", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "26");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Intermediate Position", "27");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc69_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc70()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc70", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Window closing interrupted afterrun inactive [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc70()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc70_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_13_Set_AfterRun_Inactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4564fc41-6670-428f-87ca-fab768bf19ad");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_3_2_Disable_VSL_Living", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "0e733b83-0031-415b-a65b-a0f97dea50ce");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 58 s", "4");
  {
    __Wait("1", (58 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "8");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving / Closing", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Afterrun is deactivated after timeout. Front windows stop moving immediately,", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Windows", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "13");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remain in Intermediate Position", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 58 s", "19");
  {
    __Wait("1", (58 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "22");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "24");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start Moving / Closing", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Afterrun is deactivated after timeout. Rear windows stop moving immediately,", "26");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Windows", "27");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "28");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "29");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Intermediate Position", "30");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc70_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_3_1_Enable_VSL_Living", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3b880703-c0fa-4b27-bf3d-b0f22e9e21b4");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc71()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc71", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Windows manual closing interrupted and disabled - send vehicle State not valid [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc71()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc71_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "4");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Start Moving/Closing", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Open Driver\'s Door", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(10);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Still Moving/Closing", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows Stop in Intermediate Position", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Windows", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "13");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remians in Intermediate Position", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "15");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "16");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "17");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows remians in Intermediate Position", "18");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Close Driver\'s Door", "20");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "26");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Start moving / Closing", "27");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Open Driver\'s Door", "28");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(10);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Still moving / Closing", "30");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Stop in Intermediate Position", "32");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Windows", "33");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "34");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "35");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows Stop in Intermediate Position", "36");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "39");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "40");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "41");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows remain in Intermediate Position", "42");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }



}

void Ttcc5jmo2_Tet_Tc71_Completion()
{  
  TestCompletionBegin();
  {
    TestCommandBegin(__eSet, __cSet, "Close Driver\'s Door", "44");
    {
      __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      __ReportTableEndTestStep("1");
    }
    TestCommandEnd();


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
      AddIFParameterInt64(2);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc72()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc72", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Button released window stops [EB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc72()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc72_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows Start moving immediately except Front Left", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "3");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows Stop moving immediately except Front Left", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc72_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc73()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc73", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window closing by denormed window [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc73()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc73_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_4_1_Denormalization_Of_Windows", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "587cc6a5-d2eb-42ea-b5ca-ef7a043f66b2");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "2");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows except Front Left Window", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Position of All the Windows ", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc73_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_4_2_Normalization_Of_Windows", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "fa43c794-a25b-464f-a0fd-054c6c96e551");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc74()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc74", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Window does not move when key is outside [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc74()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc74_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_12_Key_State", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "df932d2d-0ec0-41bb-9c8d-56a8fd111b8f");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Open Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Open Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc74_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_12_Key_State", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "df932d2d-0ec0-41bb-9c8d-56a8fd111b8f");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc75()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc75", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window does not move when afterrun is inactive [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc75()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc75_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_13_Set_AfterRun_Inactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4564fc41-6670-428f-87ca-fab768bf19ad");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_3_2_Disable_VSL_Living", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "0e733b83-0031-415b-a65b-a0f97dea50ce");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Opened Position", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "7");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Opened Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc75_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_3_1_Enable_VSL_Living", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3b880703-c0fa-4b27-bf3d-b0f22e9e21b4");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc76()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc76", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window does not move when remote start is active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc76()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc76_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Opened Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Opened Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc76_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc77()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc77", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Window does not move undervoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc77()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc77_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_1_Set_Under_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "f4589989-93b4-4e85-98a7-5db802bde37a");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Opened Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Opened Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc77_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc78()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc78", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Window does not move overvoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc78()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc78_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Opened Position", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "4");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Opened Position", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc78_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc79()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc79", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_Window does not move engine start [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc79()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc79_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_21_Precondition_for_Ign_Start_Cases", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "34cfd5e9-d0c6-4bb6-857f-2f3faf8a0a5c");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(5);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Opned Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "6");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows do not move. Remain in Closed Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc79_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc80()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc80", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_07_Window does not move CSL active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc80()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc80_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_13_1_Child_Security_Lock_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9dc4d60c-f737-4f9c-bd61-d2b416d76160");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Opened Position. Passenger Window start Closing", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Open Position. Passenger Window Closes Completely", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc80_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_13_0_Child_Security_Lock_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "804492b6-9f3d-4fb1-8bfa-7cbc3cf1c35d");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc81()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc81", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_08_Window does not move WL_front_disabled [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc81()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc81_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_1_WL_Front_Disabled_or_SS_Front_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ae9024c2-1fe7-444d-9504-935f3f2f281e");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows do not move. Remain in Opened Position. Rear Windows start Closing", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Front Windows do not move. Remain in open Position. Rear Windows stops in Intermediate Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc81_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_2_WL_Front_Enabled_or_SS_Front_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "36ebd0ff-570b-46d0-8c57-033245289cc9");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc82()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc82", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_09_Window does not move short stroke request rear active [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc82()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc82_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_3_WL_Rear_Disabled_or_SS_Rear_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "53af52eb-3369-488e-bbd8-a44e64cfa7a1");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Opened Position. Passenger Windows start Closing", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "5");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Windows do not move. Remain in Opened Position. Passenger Window stops in Intermediate Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc82_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_4_WL_Rear_Enabled_or_SS_Rear_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "a1b9162c-2edb-4499-a69b-dff2415b4db3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc83()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc83", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_10_Window do not move temperature protection active - Passenger [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc83()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc83_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_FR_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b545d090-ff7c-480b-9d66-c82a3a6fde00");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Passenger Window do not move. Remain in Opened Position. ", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Passenger Window do not move. Remain in Opened Position.", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc83_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc84()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc84", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_11_Window do not move temperature protection active - RL [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc84()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc84_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_RL_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1b6e1ac3-a2f0-4e08-b169-e148e6ffc876");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Left Window do not move. Remain in Opened Position. ", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Left Window do not move. Remain in Opened Position.", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc84_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc85()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc85", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_12_Window do not move temperature protection active - RR [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc85()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc85_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_3_RR_Thermal_Protection", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4d50ac40-67aa-43f8-85b6-c82827febb4f");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Right Window do not move. Remain in Opened Position. ", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Rear Right Window do not move. Remain in Opened Position.", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc85_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_7_ALL_DEACT_Thermal_Protection", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "534b9226-ac25-4dfc-bcc0-b922dd44d940");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc86()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc86", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Window closing interrupted remote start active [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc86()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc86_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows P, RL and RR start Closing", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Windows P, RL and RR Stop moving immediately", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc86_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc87()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc87", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Window manual closing interrupted, wrong ignition state - IGN_LOCK [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc87()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc87_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows P, RL and RR start Closing", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Windows P, RL and RR Stop moving immediately", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc87_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc88()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc88", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Window manual closing interrupted, wrong ignition state - IGN_OFF [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc88()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc88_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows P, RL and RR start Closing", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Windows P, RL and RR Stop moving immediately", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "6");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc88_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc89()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc89", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Window closing interrupted afterrun inactive [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc89()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc89_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_13_Set_AfterRun_Inactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "4564fc41-6670-428f-87ca-fab768bf19ad");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_3_2_Disable_VSL_Living", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "0e733b83-0031-415b-a65b-a0f97dea50ce");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eWait, __cWait, "Wait 58 s", "4");
  {
    __Wait("1", (58 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows P, RL and RR start Closing", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Open Front Right Door", "7");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FR_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Afterrun is deactivated after timeout. All windows stop moving immediately", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "10");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc89_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_3_1_Enable_VSL_Living", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3b880703-c0fa-4b27-bf3d-b0f22e9e21b4");
    }


    TestCommandBegin(__eSet, __cSet, "Close Front Right Door", "14");
    {
      __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_FR_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      __ReportTableEndTestStep("1");
    }
    TestCommandEnd();


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc90()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc90", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Window interrupted by driver control [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc90()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc90_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the Passenger Window start Closing", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Front Windows", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "7");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Passenger Window Stop moving immediately", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Front Windows", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 2 s", "12");
  {
    __Wait("1", (2 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check that the windows remain is same position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check that the Windows RL and RR start Closing", "16");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press and Hold Manual Close Button for Rear Windows", "19");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 2;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "MANCLS");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "20");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_MANCLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "21");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Windows RL and RR Stop moving immediately", "22");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Release Manual Close Button for Rear Windows", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 0;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "NPSD");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 0, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Released", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_NPSD");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "26");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


  TestCommandBegin(__eCheck, __cCheck, "Windows RL and RR remains in Same Position", "28");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc90_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc91()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc91", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Child security lock activation deactivation [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc91()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc91_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_13_1_Child_Security_Lock_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "9dc4d60c-f737-4f9c-bd61-d2b416d76160");
  }


  TestCommandBegin(__eCheck, __cCheck, "Rear Windows do not move", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Rear Windows do not move", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_13_0_Child_Security_Lock_Deactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "804492b6-9f3d-4fb1-8bfa-7cbc3cf1c35d");
  }


  TestCommandBegin(__eCheck, __cCheck, "Rear Windows start Opening", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "9");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Rear Windows Opens Completely", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc91_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc92()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc92", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Child security lock activation, deactivation - emergency mode [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc92()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc92_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_13_0_Child_Security_Lock_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "804492b6-9f3d-4fb1-8bfa-7cbc3cf1c35d");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_1_Emergency_Mode_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "73766515-23bb-4b96-bebe-2edd700de46b");
  }


  TestCommandBegin(__eSet, __cSet, "Activate CSL", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`CEIC_M_BODY1_Container_ST3_PW_Settings_ST35::`CSL_Inact_ST35.phys = 1;
      snprintf(__cArray, 8192, "%s", "CSL_Inact_ST35");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_FLS_TRU_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`CEIC_M_BODY1_Container_ST3_PW_Settings_ST35::`CSL_Inact_ST35, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "No signals are sent as CEIC is disconnected", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "CSL_LHD_Inact_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Deactivate CSL", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`CEIC_M_BODY1_Container_ST3_PW_Settings_ST35::`CSL_Inact_ST35.phys = 2;
      snprintf(__cArray, 8192, "%s", "CSL_Inact_ST35");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_FLS_TRU_TRUE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`CEIC_M_BODY1_Container_ST3_PW_Settings_ST35::`CSL_Inact_ST35, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "No signals are sent as CEIC is disconnected", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "CSL_LHD_Inact_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`CSL_LHD_Inact_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_16_2_Emergency_Mode_Deactive", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1fd08a7d-7c0a-42c6-a48d-da3c582c4d54");
  }



}

void Ttcc5jmo2_Tet_Tc92_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_13_0_Child_Security_Lock_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "804492b6-9f3d-4fb1-8bfa-7cbc3cf1c35d");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc93()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc93", __eTcDef, __eLocal);  
  CallInterfaceFunction("Code Manual Recirculation", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc93()
{	
  SetBreakOnFail(1);

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_0_Code_Manual_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2679cc2d-60ab-4943-88d0-8c66e1695bf3");
  }


}

void Ttcc5jmo2_Tet_Tc94()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc94", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Manual window closing stops by button release [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc94()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc94_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(50);
    AddIFParameterInt64(20);
    AddIFParameterInt64(30);
    AddIFParameterInt64(40);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "10");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Windows stop when saved window position is reached", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 45, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 55, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(45, 55, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 12, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 25, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(12, 25, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 25, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 35, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(25, 35, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 35, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 45, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(35, 45, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "13");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc94_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_10_3_Windows_Disable_Recirculation_Request", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "9c43fce0-fdba-4ad0-9680-1db2e0be3bf3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc95()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc95", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Manual window closing stops by windows closed [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc95()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc95_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(50);
    AddIFParameterInt64(20);
    AddIFParameterInt64(30);
    AddIFParameterInt64(40);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows Closes Completely", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "7");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows do not move , stay in Closed State", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows do not move , stay in Closed State", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "14");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Windows stop when saved window position is reached", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 45, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 55, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(45, 55, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 12, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 25, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(12, 25, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 25, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 35, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(25, 35, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 35, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 45, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(35, 45, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "16");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "17");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "18");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc95_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_10_3_Windows_Disable_Recirculation_Request", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "9c43fce0-fdba-4ad0-9680-1db2e0be3bf3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc96()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc96", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Manual window closing stops by button release, window position near short stroke position [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc96()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc96_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(9);
    AddIFParameterInt64(9);
    AddIFParameterInt64(9);
    AddIFParameterInt64(9);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "10");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Windows stop when saved window position is reached", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 6, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 12, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(6, 12, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 6, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 12, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(6, 12, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 6, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 12, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(6, 12, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 6, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 12, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(6, 12, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "13");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc96_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_10_3_Windows_Disable_Recirculation_Request", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "9c43fce0-fdba-4ad0-9680-1db2e0be3bf3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc97()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc97", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_No manual window closing when not coded [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc97()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc97_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "62493126-2814-4621-8694-1d145b5c3f0b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. They do not move", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. remain in Open Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc97_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_4_0_Code_Manual_Recirculation", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "2679cc2d-60ab-4943-88d0-8c66e1695bf3");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc98()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc98", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_No manual window closing when window near closed [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc98()
{	
  SetBreakOnFail(1);

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(4);
    AddIFParameterInt64(4);
    AddIFParameterInt64(4);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. They do not move. Stay in already defined Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. remain in Same intermediate Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_Tet_Tc99()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc99", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_No manual window closing when window position smaller than short stroke position [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc99()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc99_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(14);
    AddIFParameterInt64(14);
    AddIFParameterInt64(14);
    AddIFParameterInt64(14);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  TestCommandBegin(__eSet, __cSet, "Open Front Doors", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FR_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_RL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_RR_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. They do not move. Stay in already defined Position", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. remain in same intermediate Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc99_Completion()
{  
  TestCompletionBegin();
  {
    TestCommandBegin(__eSet, __cSet, "Close all Doors", "8");
    {
      __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_FR_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_RL_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_RR_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      __ReportTableEndTestStep("1");
    }
    TestCommandEnd();


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc100()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc100", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_No manual window closing when vehicle state parking [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc100()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc100_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. They do not move", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. remain in Open Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc100_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_11_Vehicle_state", __eFct, __eLocal);
      AddIFParameterInt64(2);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3e43138f-ab6a-4959-b80b-2c36b3bb5a95");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc101()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc101", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Manual recirculation closing interrupted by timeout of the HVAC recirculation message [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc101()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc101_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc101_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc102()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc102", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Manual recirculation closing interrupted by higher priority request [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc102()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc102_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Press Auto Open Button for Front Windows", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 5;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "AUTOOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 5;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "AUTOOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_AUTOOPN");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_AUTOOPN");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Front windows stop immediately", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press Auto Open Button for Rear Windows", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 5;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "AUTOOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 5;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "AUTOOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_AUTOOPN");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_AUTOOPN");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Rear windows stop immediately", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "12");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc102_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc103()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc103", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Manual recirculation closing interrupted by windows denormed [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc103()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc103_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_4_1_Denormalization_Of_Windows", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "587cc6a5-d2eb-42ea-b5ca-ef7a043f66b2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc103_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_4_2_Normalization_Of_Windows", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "fa43c794-a25b-464f-a0fd-054c6c96e551");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc104()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc104", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Manual recirculation closing interrupted by undervoltage [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc104()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc104_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_1_Set_Under_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "f4589989-93b4-4e85-98a7-5db802bde37a");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc104_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc105()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc105", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Manual recirculation closing interrupted by overvoltage [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc105()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc105_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_2_Set_Over_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b30d40b0-14c6-4a28-8219-c77680f72ca4");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc105_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc106()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc106", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_Manual recirculation closing interrupted by IGN_OFF [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc106()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc106_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc106_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc107()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc107", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_07_Manual recirculation closing interrupted by IGN_START [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc107()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc107_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(5);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc107_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc108()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc108", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_08_Manual recirculation closing interrupted by remote start active [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc108()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc108_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc108_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc109()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc109", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_09_Automatic recirculation closing interrupted by short stroke by CT active [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc109()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc109_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_1_WL_Front_Disabled_or_SS_Front_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ae9024c2-1fe7-444d-9504-935f3f2f281e");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Front windows stop immediately. Rear continue to Close", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_3_WL_Rear_Disabled_or_SS_Rear_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "53af52eb-3369-488e-bbd8-a44e64cfa7a1");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Rear windows also stop immediately", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc109_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_2_WL_Front_Enabled_or_SS_Front_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "36ebd0ff-570b-46d0-8c57-033245289cc9");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_4_WL_Rear_Enabled_or_SS_Rear_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "a1b9162c-2edb-4499-a69b-dff2415b4db3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc110()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc110", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Multiple recirculation request [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc110()
{	
  SetBreakOnFail(1);

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "4");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "10");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "16");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "17");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows close if close position is reached", "18");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "21");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "22");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows Open Completely", "23");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "24");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Open", "25");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_Tet_Tc111()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc111", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Recirculation closing position deleted [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc111()
{	
  SetBreakOnFail(1);

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_Tet_Tc112()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc112", __eTcDef, __eLocal);  
  CallInterfaceFunction("Code Automatic Recirculation", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc112()
{	
  SetBreakOnFail(1);

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "62493126-2814-4621-8694-1d145b5c3f0b");
  }


}

void Ttcc5jmo2_Tet_Tc113()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc113", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Windows close [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc113()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc113_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "62493126-2814-4621-8694-1d145b5c3f0b");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc113_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc114()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc114", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Automatic window closing stops by windows closed [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc114()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc114_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(50);
    AddIFParameterInt64(20);
    AddIFParameterInt64(30);
    AddIFParameterInt64(40);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "62493126-2814-4621-8694-1d145b5c3f0b");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "All windows stop when closed position is reached", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "7");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remain in Closed Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_4_Windows_AUT_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "647ff624-8ae5-459e-a8c4-745dad2d485d");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "13");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Windows stop when saved window position is reached", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 45, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 55, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(45, 55, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 12, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 25, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(12, 25, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 25, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 35, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(25, 35, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 35, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 45, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(35, 45, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "16");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "17");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc114_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc115()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc115", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Automatic recirculation closing enabled window position smaller than the short stroke position all doors closed [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc115()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc115_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(14);
    AddIFParameterInt64(14);
    AddIFParameterInt64(14);
    AddIFParameterInt64(14);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "62493126-2814-4621-8694-1d145b5c3f0b");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows Closes completely", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc115_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc116()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc116", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Window position is not deleted by change of IGN status [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc116()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc116_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "62493126-2814-4621-8694-1d145b5c3f0b");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "4");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows Closes completely", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows do not move", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(4);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows do not move", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_4_Windows_AUT_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "647ff624-8ae5-459e-a8c4-745dad2d485d");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc116_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc117()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc117", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_No automatic recirculation closing when fault active [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc117()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc117_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_23_1_Change_Body_Style_Fault_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "0b946691-cc97-4700-ac8f-1c154401eb6d");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "62493126-2814-4621-8694-1d145b5c3f0b");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_4_Windows_AUT_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "647ff624-8ae5-459e-a8c4-745dad2d485d");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position.Windows remain in Open Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc117_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_23_2_Default_Body_Style_Fault_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "19dc18e8-670d-487a-bfb8-e9e48fe96ec5");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc118()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc118", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_No automatic recirculation closing when diagnostics disabled [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc118()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc118_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_0_Code_Manual_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2679cc2d-60ab-4943-88d0-8c66e1695bf3");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "62493126-2814-4621-8694-1d145b5c3f0b");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_4_Windows_AUT_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "647ff624-8ae5-459e-a8c4-745dad2d485d");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position.Windows remain in Open Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc118_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "62493126-2814-4621-8694-1d145b5c3f0b");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc119()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc119", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_No automatic recirculation closing when window position too small [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc119()
{	
  SetBreakOnFail(1);

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(5);
    AddIFParameterInt64(5);
    AddIFParameterInt64(5);
    AddIFParameterInt64(5);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


}

void Ttcc5jmo2_Tet_Tc120()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc120", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_No automatic recirculation closing when window position smaller than the short stroke position [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc120()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc120_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(8);
    AddIFParameterInt64(8);
    AddIFParameterInt64(8);
    AddIFParameterInt64(8);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  TestCommandBegin(__eSet, __cSet, "Open Front Doors", "2");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_FR_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_RL_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3.phys = 2;
      snprintf(__cArray, 8192, "%s", "DrRLtch_RR_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_OPN");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc120_Completion()
{  
  TestCompletionBegin();
  {
    TestCommandBegin(__eSet, __cSet, "Close Front Doors", "7");
    {
      __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_FL_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FL_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_FR_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_FR_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_RL_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RL_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3.phys = 1;
        snprintf(__cArray, 8192, "%s", "DrRLtch_RR_Stat_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_DR_STAT_CLS");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_GW_Container_ST3_CLkS_Dr_State_ST3::`DrRLtch_RR_Stat_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
        
    
      }
      __ReportTableEndTestStep("1");
    }
    TestCommandEnd();


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc121()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc121", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_No automatic recirculation closing when IGN_ACC [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc121()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc121_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc121_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc122()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc122", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_No automatic recirculation closing when IGN_OFF [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc122()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc122_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc122_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc123()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc123", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic recirculation closing when IGN_LOCK [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc123()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc123_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(0);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc123_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc124()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc124", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic recirculation closing when remote start active [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc124()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc124_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc124_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc125()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc125", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic recirculation closing when windows denormed [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc125()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc125_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_4_1_Denormalization_Of_Windows", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "587cc6a5-d2eb-42ea-b5ca-ef7a043f66b2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc125_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_4_1_Denormalization_Of_Windows", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "587cc6a5-d2eb-42ea-b5ca-ef7a043f66b2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc126()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc126", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic recirculation closing when undervoltage [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc126()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc126_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_2_Precondition_for_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "70c13fc2-8a44-4e62-8dc6-8d26fa16f73a");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_1_Set_Under_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "f4589989-93b4-4e85-98a7-5db802bde37a");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows does not move", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc126_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc127()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc127", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic recirculation closing when overvoltage [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc127()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc128()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc128", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic recirculation closing when engine start active [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc128()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc129()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc129", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic recirculation closing when short stroke position front is requested by CT [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc129()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc130()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc130", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic recirculation closing when short stroke position rear is requested by CT [FVoB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc130()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc131()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc131", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic recirculation closing when thermal protection active [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc131()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc132()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc132", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic recirculation closing when vehicle state not enabled for window function [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc132()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc133()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc133", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by exceeding the zero point [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc133()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc134()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc134", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by short stroke [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc134()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc135()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc135", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by recirculation opening [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc135()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc136()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc136", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by higher priority request [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc136()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc137()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc137", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by vehicle state [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc137()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc138()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc138", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by IGN_OFF [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc138()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc139()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc139", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by IGN_LOCK [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc139()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc140()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc140", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by engine start [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc140()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc141()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc141", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by remote start active [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc141()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc142()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc142", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by windows denormed [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc142()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc143()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc143", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by undervoltage [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc143()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc144()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc144", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by overvoltage [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc144()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc145()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc145", __eTcDef, __eLocal);  
  CallInterfaceFunction("Automatic recirculation closing interrupted by short stroke by CT active [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc145()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc146()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc146", __eTcDef, __eLocal);  
  CallInterfaceFunction("Second recirculation request [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc146()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc147()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc147", __eTcDef, __eLocal);  
  CallInterfaceFunction("Recirculation closing position deleted [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc147()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc148()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc148", __eTcDef, __eLocal);  
  CallInterfaceFunction("Recirculation opening interrupted immediately by recirculation closing [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc148()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc149()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc149", __eTcDef, __eLocal);  
  CallInterfaceFunction("Code Manual Recirculation", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc149()
{	
  SetBreakOnFail(1);

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_0_Code_Manual_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2679cc2d-60ab-4943-88d0-8c66e1695bf3");
  }


}

void Ttcc5jmo2_Tet_Tc150()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc150", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Windows open [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc150()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc150_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "4");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows Opens Completely", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Open Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc150_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc151()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc151", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Recirculation button released [EB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc151()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc151_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 1 s", "4");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stop moving immediately", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc151_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc152()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc152", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Recirculation position reached [EB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc152()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc152_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(200);
    AddIFParameterInt64(200);
    AddIFParameterInt64(200);
    AddIFParameterInt64(200);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 3 s", "10");
  {
    __Wait("1", (3 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Windows stop when saved window position is reached", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 198, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, 203, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_FL_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(198, 203, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 198, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, 203, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_FR_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(198, 203, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 198, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, 203, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_RL_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(198, 203, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      {
        int __res1,__res2;
        __res1 = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 198, __cGreaterEqualThan) == 1;
        __res2 = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, 203, __cLessEqualThan) == 1;
        __csr = __res1 && __res2;
        snprintf(__cArray, 8192, "%s", "PW_RR_Posn_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "");
        snprintf(__cArray4, 8192, "%s", "");
        snprintf(__cArray5, 8192, "%s", __cArray3);
        snprintf(__cArray6, 8192, "%s", __cArray4);
        ReportRange(198, 203, __cArray5, __cArray6, __cArray7, 8192);
        __ReportTableRow(0, __cArray2, __cRange, __cArray7, __cEmpty);
        __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_ST3, __cArray8);
        __ReportCell(__cArray8);
        __ReportCellResult(__csr, __ePassFail);
      }
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "13");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "14");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc152_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_10_3_Windows_Disable_Recirculation_Request", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "9c43fce0-fdba-4ad0-9680-1db2e0be3bf3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_1_Power_Windows_Open", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "8107aae2-4b9d-4b1f-8dc2-f44bd9fe3be2");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc153()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc153", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_No manual recirculation opening when diagnostics disabled [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc153()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc153_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_4_1_Code_Automatic_Recirculation", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "62493126-2814-4621-8694-1d145b5c3f0b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window does not move", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "5");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows remain in closed Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "7");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Close Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 2, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLS");
      __ReportTableRow(0, __cArray2, "==", 2, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc153_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_4_0_Code_Manual_Recirculation", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "2679cc2d-60ab-4943-88d0-8c66e1695bf3");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc154()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc154", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_No manual recirculation opening when no recirculation position saved [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc154()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc154_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_22_Set_Window_Position_for_Recirculation_Cases", __eFct, __eLocal);
    AddIFParameterInt64(50);
    AddIFParameterInt64(20);
    AddIFParameterInt64(30);
    AddIFParameterInt64(40);
    CallInterfaceFunction(__cEmpty, __cEmpty, "8ece929c-3970-40fa-b1f7-0cf2f91ba71b");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_4_1_Denormalization_Of_Windows", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "587cc6a5-d2eb-42ea-b5ca-ef7a043f66b2");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window does not move. Remain in already defined state", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "6");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows remain in intermediate Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in intermediate Position", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc154_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_4_2_Normalization_Of_Windows", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "fa43c794-a25b-464f-a0fd-054c6c96e551");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc155()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc155", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Recirculation opening interrupted by timeout of the HVAC recirculation message [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc155()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc155_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window start moving / opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending local HVAC message Signals", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_RL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_RR_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check that Window stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc155_Completion()
{  
  TestCompletionBegin();
  {
    TestCommandBegin(__eSet, __cSet, "Start sending local HVAC message Signals", "8");
    {
      __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 2;
        snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
        
    
      }
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3.phys = 2;
        snprintf(__cArray, 8192, "%s", "CC_Win_FR_Rq_HVAC_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FR_Rq_HVAC_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
        
    
      }
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3.phys = 2;
        snprintf(__cArray, 8192, "%s", "CC_Win_RL_Rq_HVAC_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RL_Rq_HVAC_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
        
    
      }
      {
        $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3.phys = 2;
        snprintf(__cArray, 8192, "%s", "CC_Win_RR_Rq_HVAC_ST3");
        snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
        snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_TRUE");
        
        __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_RR_Rq_HVAC_ST3, __cArray2, __cArray4);
        __ReportTableRow(0, __cArray4, __cAOp, 2, __cArray3);
        
    
      }
      __ReportTableEndTestStep("1");
    }
    TestCommandEnd();


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc156()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc156", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Recirculation opening interrupted by higher priority request [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc156()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc156_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window start moving / opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Press Auto Open Button for Front Windows", "4");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR.phys = 5;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "AUTOOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR.phys = 5;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "AUTOOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_FR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_AUTOOPN");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_FR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_AUTOOPN");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_FR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Front windows stop immediately", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_1_Select_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "1ff14b53-bc07-4b94-bf08-9392799f1b90");
  }


  TestCommandBegin(__eSet, __cSet, "Press Auto Open Button for Rear Windows", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR.phys = 5;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "AUTOOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RL_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
      
  
    }
    {
      $`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR.phys = 5;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_ST3_DOOR");
      snprintf(__cArray2, 8192, "%s '%s'", __cLinSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "AUTOOPN");
      
      __ReportSetLValueOrSignalNotOnline(`LIN::dbNode::`DSM_WM_DOOR::`DSM_WM_Stat_LIN_ST3_DOOR::`PW_Adj_RR_ST3_DOOR, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 5, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check the Response signal for Button Pressed", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RL_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_AUTOOPN");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RL_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, 5, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_Adj_RR_Dr_FL_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C03_NPSD_MAN_STP_AUTOPNCLS_IMP_AUTOOPN");
      __ReportTableRow(0, __cArray2, "==", 5, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container1_ST3_PW_Adj_Rq_Dr_FL_ST3::`PW_Adj_RR_Dr_FL_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Rear windows stop immediately", "10");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_12_2_Deselect_Rear_Button", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "330f839f-c2ed-4150-8fa2-4f59b8c964b4");
  }


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "12");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "13");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc156_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc157()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc157", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Recirculation opening interrupted by windows denormed [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc157()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc157_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window start moving / opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_4_1_Denormalization_Of_Windows", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "587cc6a5-d2eb-42ea-b5ca-ef7a043f66b2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc157_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_4_2_Normalization_Of_Windows", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "fa43c794-a25b-464f-a0fd-054c6c96e551");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc158()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc158", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Recirculation opening interrupted by undervoltage [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc158()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc158_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window start moving / opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_1_Set_Under_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "f4589989-93b4-4e85-98a7-5db802bde37a");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc158_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc159()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc159", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Recirculation opening interrupted by overvoltage [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc159()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc159_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window start moving / opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_14_2_Set_Over_Voltage", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "b30d40b0-14c6-4a28-8219-c77680f72ca4");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc159_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_14_3_Set_Normal_Voltage", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "daace6b6-4cd7-4d83-ac11-992b1a2e03c7");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc160()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc160", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_Recirculation opening interrupted by IGN_OFF [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc160()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc160_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window start moving / opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(1);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc160_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc161()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc161", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_07_Recirculation opening interrupted by remote start [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc161()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc161_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window start moving / opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
    AddIFParameterInt64(2);
    CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "6");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc161_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_8_Remote_Start", __eFct, __eLocal);
      AddIFParameterInt64(1);
      CallInterfaceFunction(__cEmpty, __cEmpty, "eefb4b34-632a-40da-b6a2-43ae4500dae2");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc162()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc162", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_08_Recirculation opening interrupted by engine start [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc162()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc162_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_21_Precondition_for_Ign_Start_Cases", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "34cfd5e9-d0c6-4bb6-857f-2f3faf8a0a5c");
  }


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window start moving / opening", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
    AddIFParameterInt64(5);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window stop immediately", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "7");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "8");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc162_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_10_Ignition_Status", __eFct, __eLocal);
      AddIFParameterInt64(4);
      CallInterfaceFunction(__cEmpty, __cEmpty, "ed53a2fd-4e1b-4fb7-beaa-9869a308d142");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc163()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc163", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_09_Automatic recirculation closing interrupted by short stroke by CT active [AB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc163()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc163_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check that Window start moving / opening", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_1_WL_Front_Disabled_or_SS_Front_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "ae9024c2-1fe7-444d-9504-935f3f2f281e");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Front windows stop immediately", "5");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_15_3_WL_Rear_Disabled_or_SS_Rear_Active", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "53af52eb-3369-488e-bbd8-a44e64cfa7a1");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Rear windows stop immediately", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "8");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Intermediate Position", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc163_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_2_WL_Front_Enabled_or_SS_Front_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "36ebd0ff-570b-46d0-8c57-033245289cc9");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_15_4_WL_Rear_Enabled_or_SS_Rear_Deactive", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "a1b9162c-2edb-4499-a69b-dff2415b4db3");
    }


    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc164()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc164", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Recirculation position stays saved [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc164()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc164_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  TestPreparationBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_BS_18_1_Precondition_for_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "3059bec7-7af3-4e7c-be62-254a53a4a553");
    }


  }
  TestPreparationEnd();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "3");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "4");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "5");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "6");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "10");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "11");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows remian in same Position", "12");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "15");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "", "16");
  {
    __Wait("1", (1 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "17");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows Open if Open position is reached", "18");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc164_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc165()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc165", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Windows open [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc165()
{	
  SetBreakOnFail(1);

  CreateTTEIFFunction("Ttcc5jmo2_Tet_Tc165_Completion", __eFct, __eLocal);
  
  AddIFAsCleanUpFunction();

  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_1_Windows_MAN_CLS_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "e84ced27-cfff-4166-a812-e47aa14307c7");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "2");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 7, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_CLOSING");
      __ReportTableRow(0, __cArray2, "==", 7, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "3");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. All windows stop immediately", "4");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 0, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_INTERMEDIATE");
      __ReportTableRow(0, __cArray2, "==", 0, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  {
    CreateTTEIFFunction("Ttcc5jmo2_BS_10_2_Windows_MAN_OPN_Recirculation_Request", __eFct, __eLocal);
    CallInterfaceFunction(__cEmpty, __cEmpty, "2ed7df22-667a-43d9-a27f-e4150c138bdb");
  }


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position", "7");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 6, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPENING");
      __ReportTableRow(0, __cArray2, "==", 6, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eWait, __cWait, "Wait 4 s", "8");
  {
    __Wait("1", (4 * 1000000000LL), 1000000000, "");
  }
  TestCommandEnd();

  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows open", "9");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();


  TestCommandBegin(__eSet, __cSet, "Stop sending recirculation request", "10");
  {
    __ReportTableHead3Columns(__cSetCaption , __cTSym, __cTOp, __cAssigned); 
    {
      $`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3.phys = 1;
      snprintf(__cArray, 8192, "%s", "CC_Win_FL_Rq_HVAC_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C02_NDEF_FALSE_TRUE_ST3_FALSE");
      
      __ReportSetLValueOrSignalNotOnline(`BODY1::dbNode::`CEIC_M::`BC_F_BODY1_Container_ST3_CC_Rq_HVAC_ST3::`CC_Win_FL_Rq_HVAC_ST3, __cArray2, __cArray4);
      __ReportTableRow(0, __cArray4, __cAOp, 1, __cArray3);
      
  
    }
    __ReportTableEndTestStep("1");
  }
  TestCommandEnd();


  TestCommandBegin(__eCheck, __cCheck, "Check Window Position. Windows stay in Open Position", "11");
  {
    __bVerdict = __eVerdictPass;
    __ReportTableHead5Columns(__cCheckCaption, __cTSym, __cTOp, __cRefVal, __cActual, __cRes);
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FL::`DM_FL_BODY1_Container2_ST3_PW_FL_Stat_ST3::`PW_FL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_FR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_FR::`DM_FR_BODY1_Container2_ST3_PW_FR_Stat_ST3::`PW_FR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RL_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RL::`DM_RL_BODY1_Container2_ST3_PW_RL_Stat_ST3::`PW_RL_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    {
      __csr = CheckSignalMatch(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, 1, "==") == 1;
      snprintf(__cArray, 8192, "%s", "PW_RR_Posn_Stat_ST3");
      snprintf(__cArray2, 8192, "%s '%s'", __cPduSignal, __cArray);
      snprintf(__cArray3, 8192, "%s", "I_C04_PW_POSN_STAT_ST3_WNDW_OPN");
      __ReportTableRow(0, __cArray2, "==", 1, __cArray3);
      __ReportLValueOrSignalNotOnline(`BODY1::dbNode::`DM_RR::`DM_RR_BODY1_Container2_ST3_PW_RR_Stat_ST3::`PW_RR_Posn_Stat_ST3, __cArray5);
      __ReportCell(__cArray5);
      __ReportCellResult(__csr, __ePassFail);
  
      __bVerdict = __bVerdict && __csr;
    }
    __ReportTableEndVerdict("1", __bVerdict);
  }
  TestCommandEnd();



}

void Ttcc5jmo2_Tet_Tc165_Completion()
{  
  TestCompletionBegin();
  {
    {
      CreateTTEIFFunction("Ttcc5jmo2_RC_1_0_Power_Windows_Close", __eFct, __eLocal);
      CallInterfaceFunction(__cEmpty, __cEmpty, "0baf3fe2-ad68-4b04-aa3b-adcc5c58fd54");
    }


  }
  TestCompletionEnd();
}

void Ttcc5jmo2_Tet_Tc166()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc166", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_01_Automatic window opening FL by Online-Request [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc166()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc167()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc167", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_02_Automatic window opening FR by Online-Request [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc167()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc168()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc168", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_03_Automatic window opening RL by Online-Request [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc168()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc169()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc169", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_04_Automatic window opening RR by Online-Request [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc169()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc170()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc170", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_05_Automatic window opening FL by Online-Request, no key search [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc170()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc171()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc171", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_06_Automatic window opening FR by Online-Request, no key search [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc171()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc172()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc172", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_07_Automatic window opening RL by Online-Request, no key search [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc172()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc173()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc173", __eTcDef, __eLocal);  
  CallInterfaceFunction("TC_08_Automatic window opening RL by Online-Request, no key search [FA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc173()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc174()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc174", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic window opening when key not detected inside [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc174()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc175()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc175", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic window opening when temperature protection active [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc175()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc176()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc176", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic window opening when windows denormed [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc176()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc177()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc177", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic window opening when overvoltage [FVoA]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc177()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc178()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc178", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic window opening when windows completely open [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc178()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc179()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc179", __eTcDef, __eLocal);  
  CallInterfaceFunction("No automatic window opening for USA variant [VB]", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc179()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc180()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc180", __eTcDef, __eLocal);  
  CallInterfaceFunction("Test Case", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc180()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc181()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc181", __eTcDef, __eLocal);  
  CallInterfaceFunction("Test Case", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc181()
{	
  SetBreakOnFail(1);

}

void Ttcc5jmo2_Tet_Tc182()
{
  CreateTTEIFFunction("Ttcc5jmo2_Tc182", __eTcDef, __eLocal);  
  CallInterfaceFunction("Test Case", __cEmpty , __cEmpty );
}
testcase Ttcc5jmo2_Tc182()
{	
  SetBreakOnFail(1);

}

